Search.setIndex({"docnames": ["README", "analysis", "batt_sys_identification", "charging_sim", "feeder_population", "index", "modules", "readme", "test_cases", "test_cases.base_case", "test_cases.battery", "test_cases.battery.feeder_population"], "filenames": ["README.md", "analysis.rst", "batt_sys_identification.rst", "charging_sim.rst", "feeder_population.rst", "index.rst", "modules.rst", "readme.rst", "test_cases.rst", "test_cases.base_case.rst", "test_cases.battery.rst", "test_cases.battery.feeder_population.rst"], "titles": ["EV-Ecosim platform", "Post-simulation analysis", "Battery System Identification", "Charging simulator", "Feeder population", "Welcome to EV-Ecosim 1.0.0", "Packages", "Readme", "Test cases", "test_cases.base_case package", "test_cases.battery package", "test_cases.battery.feeder_population package"], "terms": {"A": [0, 1, 3], "grid": [0, 1, 3, 5], "awar": [0, 5], "design": [0, 3], "vehicl": [0, 3], "paper": [0, 2, 3], "http": [0, 1, 3], "doi": [0, 3], "org": [0, 3], "10": [0, 2, 3], "36227": [0, 3], "techrxiv": [0, 3], "23596725": [0, 3], "v2": [0, 3], "emmanuel": 0, "balogun": [0, 3], "ebalogun": 0, "stanford": 0, "edu": 0, "lili": 0, "buechler": 0, "ebuech": 0, "gismo": 0, "slac": 0, "gridlab": [0, 4, 5, 11], "d": [0, 4, 5, 11], "instal": [0, 3], "master": 0, "branch": 0, "github": [0, 5], "com": [0, 3], "arra": 0, "energi": [0, 3], "gridlabd": 0, "version": [0, 3, 5], "python": [0, 5], "recommend": 0, "aw": 0, "ec2": 0, "hipa": 0, "ami": 0, "beauharnoi": 0, "x": 0, "ambient": [0, 3], "_": 0, "data": [0, 1, 2, 3], "temperatur": [0, 3], "captur": 0, "effect": [0, 3], "environment": 0, "condit": 0, "subsystem": 0, "transform": [0, 1, 3], "base": [0, 1, 2, 3, 5, 11], "load": [0, 1, 2, 3, 4, 11], "includ": [0, 1, 2, 3, 5], "exist": [0, 3], "build": [0, 1, 3], "home": [0, 3], "usual": [0, 3], "uncontrol": 0, "within": [0, 1, 2, 3], "distribut": [0, 1, 3, 5], "work": [0, 2, 3], "proprietari": 0, "pecan": 0, "street": 0, "below": 0, "an": [0, 3], "exmapl": 0, "prototyp": 0, "note": [0, 3], "column": [0, 2], "field": [0, 2], "ar": [0, 1, 2, 3], "sensit": [0, 2], "The": [0, 1, 2, 3, 5], "origin": [0, 2], "ha": [0, 3], "minut": [0, 3], "resolut": [0, 3], "power": [0, 1, 3, 4, 5, 11], "system": [0, 1, 3, 4, 5, 6, 11], "batt": [0, 3], "sy": 0, "identif": [0, 3, 5, 6], "class": [0, 1, 2, 3, 4, 11], "gener": [0, 2, 3], "paramet": [0, 1, 2, 3, 4, 11], "from": [0, 1, 2, 3, 4], "experiment": 0, "leverag": 0, "genet": [0, 2], "algorithm": [0, 2], "model": [0, 2, 3, 4, 5, 11], "2nd": 0, "order": 0, "rc": 0, "equival": [0, 2], "circuit": [0, 2, 3], "ecm": [0, 2], "One": 0, "can": [0, 1, 2, 3], "custom": 0, "nmc": [0, 3], "upload": 0, "csv": [0, 2, 3], "file": [0, 1, 2, 3, 4, 11], "param": [0, 2, 3], "shown": [0, 5], "save": [0, 1, 3], "new": [0, 2, 3], "addit": 0, "correct": [0, 2, 3], "open": [0, 2, 3], "voltag": [0, 1, 2, 3], "ocv": [0, 2, 3], "valu": [0, 1, 2, 3], "label": [0, 1], "ocv_corr": 0, "abov": 0, "onc": [0, 3], "thei": [0, 2], "battery_data": 0, "config": [0, 3, 6], "json": [0, 3], "modifi": [0, 3, 4, 11], "so": [0, 3], "sim": [0, 3, 6, 8], "contain": [0, 1, 3, 5, 11], "which": [0, 1, 2, 3], "configur": [0, 3], "all": [0, 1, 2, 3, 4], "relev": [0, 3], "implement": [0, 1, 3], "physic": [0, 3], "legaci": 0, "forecast": [0, 3], "develop": [0, 5], "need": [0, 3], "elec": 0, "rate": [0, 3], "time": [0, 2, 3], "tou": [0, 3], "input": [0, 2, 3], "user": [0, 2, 3], "must": [0, 2, 3], "normal": [0, 1], "full": [0, 3], "year": [0, 3], "size": [0, 2], "365": 0, "dai": [0, 1, 3], "avoid": 0, "ani": [0, 2, 3], "error": [0, 2], "format": 0, "read": 0, "sampl": [0, 3], "dure": [0, 2, 3], "should": [0, 3], "one": [0, 2, 3], "15": [0, 3], "also": [0, 1, 3], "help": [0, 3], "downscal": [0, 3, 6], "much": [0, 3], "coarser": 0, "librari": [0, 3], "ieee": [0, 1], "test": [0, 2, 3, 5, 6], "pnnl": 0, "taxonomi": 0, "glm": [0, 4, 11], "have": [0, 2, 3, 5], "spot": 0, "specifi": [0, 3], "primari": 0, "level": [0, 1, 3], "secondari": [0, 3], "popul": [0, 2, 5, 6], "script": 0, "vari": 0, "resourc": [0, 1], "necessari": 0, "txt": [0, 3], "residenti": 0, "repo": 0, "limit": [0, 3], "access": [0, 3, 5], "irradi": [0, 3], "overal": [0, 1, 3], "default": [0, 2, 3], "nation": 0, "radiat": 0, "databas": 0, "nsrdb": 0, "san": 0, "francisco": 0, "bai": 0, "area": [0, 3], "renew": 0, "laboratori": 0, "nrel": [0, 1], "month": [0, 3], "index": [0, 3, 5], "1": [0, 2, 3], "12": [0, 1, 3], "inclus": [0, 2], "januari": 0, "decemb": [0, 3], "hourli": 0, "interv": 0, "oversampl": 0, "4": 0, "dataset": [0, 3], "ghi": [0, 3], "repres": 0, "global": [0, 3], "horizont": [0, 3], "w": 0, "m": 0, "2": [0, 2], "total": [0, 3], "amount": [0, 1], "shortwav": 0, "receiv": 0, "surfac": [0, 3], "ground": 0, "base_cas": [0, 6, 8], "write": [0, 2, 4, 11], "inject": [0, 3], "each": [0, 1, 3], "timestep": 0, "rlsf": 0, "plu": 0, "recurs": 0, "least": [0, 3], "squar": 0, "filter": [0, 4, 11], "estim": [0, 1, 3, 5], "network": [0, 1, 3, 5], "onlin": 0, "thermal": [0, 3], "integr": [0, 5], "plot": [0, 1, 2, 3], "result": [0, 1, 3], "calcul": [0, 1, 3], "impact": [0, 5], "plot_result": [0, 6], "pars": 0, "percentag": [0, 2], "violat": [0, 1], "per": [0, 2, 3], "ansi": 0, "c84": 0, "variabl": [0, 3], "string": [0, 3], "path": [0, 3], "where": [0, 3], "powerflow": 0, "output": [0, 3, 4], "node": [0, 1, 3], "load_post_opt_cost": [0, 6], "tabl": 0, "matric": 0, "respect": [0, 3], "cost_analysi": [0, 6], "costestim": [0, 1, 6], "differ": [0, 1, 3], "compon": [0, 1], "creat": [0, 1, 3], "environ": 0, "conda": 0, "env": 0, "name": [0, 3], "your": [0, 3], "f": [0, 3], "yml": 0, "OR": 0, "packag": [0, 5, 8], "list": [0, 1, 3, 4], "manual": 0, "ensur": [0, 2, 3], "follow": [0, 2, 3], "method": [0, 3], "For": 0, "navig": 0, "set": [0, 2, 3], "prepar": 0, "confirm": 0, "successfulli": 0, "ieee123_secondari": 0, "ieee123_popul": 0, "you": 0, "done": [0, 2, 3], "initi": [0, 3], "pre": [0, 2, 3], "prep": 0, "now": [0, 3], "out": [0, 3], "scenario": [0, 1, 3, 6, 8], "python3": 0, "ev50_cosimul": 0, "master_sim": [0, 6, 8], "pleas": [0, 2], "see": [0, 2], "section": 0, "more": [0, 2, 3], "detail": 0, "thi": [1, 2, 3, 5], "cost": [1, 3], "der": [1, 3], "simul": [2, 4, 5, 6, 11], "num_dai": 1, "sourc": [1, 2, 3, 4, 11], "object": [1, 2, 3, 4, 11], "i": [1, 2, 3, 5], "us": [1, 2, 3, 5], "asset": [1, 3], "ev": [1, 3], "ecosim": [1, 3], "number": [1, 2, 3], "run": [1, 2, 3, 5, 6], "calculate_battery_cost": [1, 6], "result_dir": 1, "batteri": [1, 5, 6, 8], "updat": [1, 2, 3], "lcoe": 1, "directori": 1, "dictionari": [1, 3, 4, 11], "return": [1, 2, 3, 4, 11], "dict": [1, 3, 4], "result_dict": 1, "calculate_electricity_cost_pgebev2": [1, 6], "pge_separate_fil": 1, "true": [1, 2, 3], "electr": [1, 3], "pgebev2": 1, "given": [1, 2, 3], "str": [1, 3], "compris": 1, "dollar": 1, "calculate_solar_cost": [1, 6], "pull": [1, 3], "solar": [1, 5, 6], "ref": [1, 3], "www": [1, 3], "gov": 1, "market": 1, "research": 1, "html": 1, "To": 1, "deprec": [1, 3], "soon": 1, "none": [1, 2, 3], "calculate_trans_loss_of_lif": [1, 6], "expect": 1, "loss": [1, 3], "life": [1, 3], "refer": 1, "5": 1, "11": 1, "3": [1, 2, 5], "std": 1, "c57": 1, "00": 1, "2010": 1, "minimum": [1, 3], "insul": 1, "180": 1, "000": 1, "hour": [1, 3], "static": [1, 3], "plot_load": [1, 6], "total_load": 1, "net_load": 1, "prefix": [1, 3], "overlai": 1, "net": [1, 3], "post": [3, 5, 6], "visual": [1, 3, 6], "demand": [1, 3], "control": [1, 6], "minu": 1, "buffer": 1, "legend": 1, "curv": 1, "plot_pow": [1, 6], "power_pr": 1, "predict": [1, 3], "plot_soc": [1, 6], "soc": [1, 2, 3], "soc_pr": 1, "state": [1, 2, 3], "charg": [1, 2, 5, 6], "solar_cost": [1, 6], "capit": 1, "Not": [1, 2, 3], "fulli": [1, 3], "locat": [1, 3], "pv": [1, 3], "transformer_cost": [1, 3, 6], "cannot": [1, 3], "find": [1, 2, 3], "good": 1, "yet": [1, 2, 3], "ag": [1, 3], "battery_typ": [3, 6], "instanti": [2, 3], "constraint": 3, "properti": 3, "mainli": 3, "max": 3, "c": 3, "determin": 3, "capac": 3, "cell": [2, 3], "multipl": 3, "v": 3, "maximum": 3, "allow": 3, "min": 3, "nomin": 3, "kwh": 3, "deliver": 3, "id": 3, "celsiu": 3, "type": 3, "inconsequenti": 3, "current": [2, 3], "dynam": [3, 6], "bu": 3, "resid": 3, "self": 3, "main": [3, 6], "attribut": [2, 3], "battery_setup": [3, 6], "up": 3, "seri": [2, 3], "parallel": 3, "scale": 3, "ah": 3, "setup": [3, 6], "fix": 3, "while": 3, "float": 3, "pack": 3, "wh": 3, "topologi": 3, "battery_setup_2": [3, 6], "instead": 3, "therebi": 3, "same": 3, "pack_max_ah": 3, "watt": 3, "amp": 3, "cell_amp_hr": 3, "cell_voltag": 3, "propag": 3, "forward": 3, "step": [3, 6], "It": [3, 5], "take": [2, 3], "amper": 3, "np": 3, "cycl": 3, "respons": [2, 3], "est_calendar_ag": [3, 6], "constant": 3, "calendar": 3, "sole": 3, "depend": 3, "later": 3, "linear": [2, 3], "est_cyc_ag": [3, 6], "hess": 3, "et": 3, "al": 3, "its": 3, "cvx": 3, "cvxpy": 3, "describ": [2, 3], "function": [3, 4, 11], "get_ocv": [3, 6], "map": 3, "store": 3, "via": [2, 3, 5], "interpol": 3, "obtain": 3, "priori": 3, "": 3, "get_ro": [2, 3, 6], "possibli": 3, "get_aging_valu": [3, 6], "experienc": 3, "far": 3, "get_power_profil": [3, 6], "profil": 3, "certain": 3, "get_properti": [3, 6], "get_roundtrip_effici": [3, 6], "get_total_ag": [3, 6], "get_true_pow": [3, 6], "save_sim_data": [3, 6], "save_prefix": 3, "over": [2, 3], "call": 3, "upon": 3, "conclus": 3, "desir": [2, 3], "folder": [2, 3], "save_st": [3, 6], "state_eqn": [3, 6], "append": 3, "discret": 3, "equat": 3, "here": 3, "g": 3, "l": 3, "plett": 3, "manag": 3, "volum": 3, "artech": 3, "hous": 3, "2015": 3, "vol": 3, "boolean": 3, "decid": 3, "track": 3, "b": 3, "analys": 3, "histori": 3, "vector": [2, 3], "thermal_dynam": [3, 6], "futur": 3, "track_soc": [3, 6], "update_soc": [3, 6], "update_capac": [3, 6], "anticip": 3, "update_max_curr": [3, 6], "verbos": 3, "fals": [2, 3], "update_param": [3, 6], "chang": 3, "update_voltag": [3, 6], "option": 3, "batteryag": [3, 6], "enact": 3, "resist": [2, 3], "datetim": 3, "num_step": 3, "re": 3, "linimncoo2": 3, "ad": 3, "link": [3, 5], "sciencedirect": 3, "scienc": 3, "articl": 3, "pii": 3, "s0378775314001876": 3, "beta_cap": 3, "fade": 3, "factor": 3, "alpha_cap": 3, "beta_r": 3, "growth": 3, "alpha_r": 3, "assumpt": 3, "homogen": 3, "uniform": 3, "across": 3, "vicin": 3, "lfp_cal_ag": [3, 6], "lfp_cyc_ag": [3, 6], "nmc_cal_ag": [3, 6], "nmc_cyc_ag": [3, 6], "get_calendar_ag": [3, 6], "tupl": 3, "due": 3, "get_cyc_ag": [3, 6], "THe": 3, "both": 3, "adopt": 3, "schmalsteig": 3, "update_resist": [3, 6], "program": 3, "usag": 3, "proper": 3, "py": 3, "exampl": 3, "battery_config_path": 3, "r": 3, "battery_config": 3, "params_list": 3, "kei": 3, "params_": 3, "Then": 3, "params_kei": 3, "actual": 3, "those": 3, "prior": 3, "loadtxt": 3, "path_prefix": 3, "constructor": 3, "buffer_batteri": 3, "r_pack": [3, 6], "sum": 3, "aging_c": 3, "lost": 3, "after": 3, "round": 3, "trip": 3, "effici": 3, "_eff": 3, "last": 3, "load_pack_prop": [3, 6], "dx": 3, "nominal_pack_cap": [3, 6], "meth": 3, "intern": 3, "avail": [3, 5], "defer": 3, "TO": 3, "BE": 3, "anymor": 3, "onli": 3, "right": 3, "behavior": 3, "inspect": 3, "end": 3, "host": [2, 3], "station": [3, 5], "storag": 3, "statu": 3, "idl": 3, "produc": 3, "reactiv": 3, "contribut": 3, "retain": 3, "inform": [3, 5], "etc": 3, "ingest": 3, "assign": 3, "get_current_load": [3, 6], "kw": 3, "is_ev_arriv": [3, 6], "is_charg": [3, 6], "set_current_load": [3, 6], "update_load": [3, 6], "net_grid_load": 3, "ev_load": 3, "mpc": [3, 6], "mode": 3, "update_load_oneshot": [3, 6], "offlin": 3, "non": [2, 3], "update_statu": [3, 6], "scheme": [2, 3], "bess": 3, "compute_control": [3, 6], "price_vector": 3, "action": 3, "comput": 3, "pass": 3, "control_act": 3, "signal": 3, "arbitrag": 3, "get_battery_constraint": [3, 6], "requir": 3, "satisfi": 3, "storage_constraint": 3, "initialize_forecast_data": [3, 6], "load_battery_ocv": [3, 6], "learn": 3, "reset_load": [3, 6], "oneshot": [3, 6], "96": 3, "feedback": 3, "price": 3, "structur": [3, 4, 11], "problem": 3, "pge_bev2_": [3, 6], "valid": 3, "california": 3, "howev": [2, 3], "own": 3, "numpi": 3, "arrai": 3, "priceload": [3, 6], "evs": 3, "profit": 3, "loader": 3, "first": 3, "repositori": 3, "input_r": 3, "output_r": 3, "finer": 3, "similar": 3, "panda": [2, 3], "typic": 3, "get_pric": [3, 6], "start_idx": 3, "7": [2, 3], "assum": 3, "do": 3, "int": 3, "start": 3, "cardin": 3, "being": [2, 3], "jan": 3, "ndarrai": 3, "set_month_data": [3, 6], "solv": 3, "objective_typ": 3, "power_demand": 3, "time_r": 3, "0": [2, 3], "solver": [3, 5], "gurobi": 3, "degrad": 3, "convex": 3, "mix": 3, "integ": 3, "select": [2, 3], "separ": 3, "pc": 3, "success": 3, "counter": 3, "identifi": 3, "backend": 3, "invok": 3, "eco": 3, "mosek": 3, "add_demand_charg": [3, 6], "aggregate_constraint": [3, 6], "aggreg": 3, "build_battery_cost": [3, 6], "build_emissions_cost": [3, 6], "emiss": 3, "build_transformer_cost": [3, 6], "get_constraint": [3, 6], "instanc": [2, 3, 4], "chargingsim": [3, 6], "entir": 3, "num_charging_sit": 3, "6": 3, "num_ev": 3, "1600": 3, "custom_ev_data": 3, "custom_ev_data_path": 3, "custom_solar_data": 3, "custom_solar_data_path": 3, "organ": 3, "other": 3, "sequenti": 3, "manner": 3, "bool": 3, "If": 3, "site": 3, "o": 3, "create_battery_object": [3, 6], "idx": 3, "node_prop": 3, "l2": 3, "dcfc": 3, "create_charging_st": [3, 6], "power_nod": 3, "buse": 3, "create_charging_stations_oneshot": [3, 6], "create_solar_object": [3, 6], "loc": 3, "get_act": [3, 6], "get_charger_obj_by_loc": [3, 6], "get_charging_sit": [3, 6], "initialize_aging_sim": [3, 6], "initialize_control": [3, 6], "initialize_price_load": [3, 6], "memori": 3, "initialize_solar_modul": [3, 6], "load_battery_param": [3, 6], "directli": 3, "unless": 3, "otherwis": 3, "load_config": [3, 6], "walk": 3, "through": 3, "them": 3, "load_results_summari": [3, 6], "save_path_prefix": 3, "some": [2, 3], "multistep": [3, 6], "faster": 3, "than": 3, "horizon": 3, "perfect": 3, "foresight": 3, "daili": 3, "reset": 3, "power_nodes_list": 3, "accordingli": 3, "specif": 3, "stepsiz": 3, "update_scenario": [3, 6], "match": 3, "update_step": [3, 6], "move": 3, "namepl": 3, "p_": 3, "eta": 3, "panel": 3, "make": 3, "decis": 3, "flow": [3, 5], "devic": 3, "get_pow": [3, 6], "desired_shap": 3, "get_solar_output": [3, 6], "modify_r": [3, 6], "new_r": 3, "update_histori": [3, 6], "purpos": 3, "mayb": 3, "schedul": 3, "pge": 3, "doc": 3, "found": 3, "add_power_profile_to_object": [3, 6], "battery_power_profil": 3, "build_cost_pge_bev2": [3, 6], "energy_prices_t": 3, "penalize_max_pow": 3, "max_power_pen": 3, "1000": 3, "heurist": 3, "averag": 3, "conserv": 3, "gamma": 3, "build_electricity_cost": [3, 6], "demand_charg": 3, "opt": 3, "build_object": [3, 6], "electricity_cost": 3, "battery_degradation_cost": 3, "we": [3, 5], "minim": 3, "load_pric": [3, 6], "time_interv": 3, "load_base_glm": [4, 6, 10, 11], "base_file_dir": [4, 11], "base_glm_fil": [4, 11], "replace_load_w_met": [4, 6, 10, 11], "glm_dict": [4, 11], "match_str": [4, 11], "rep_str": [4, 11], "obj_typ": [4, 11], "replac": [4, 11], "meter": [4, 11], "replace_load_w_meter_old": [4, 6, 10, 11], "write_base_glm": [4, 6, 10, 11], "globals_list": [4, 11], "include_list": [4, 11], "out_dir": [4, 11], "file_nam": [4, 11], "sync_list": [4, 11], "write_class_dict": [4, 6, 10, 11], "gld_dict": [4, 11], "class_nam": [4, 11], "correspond": [2, 4, 11], "gld": [4, 11], "write_clock_dict": [4, 6, 10, 11], "clock": [4, 11], "write_filter_dict": [4, 6, 10, 11], "write_mod_dict": [4, 6, 10, 11], "mod_nam": [4, 11], "write_obj_dict": [4, 6, 10, 11], "dict_kei": [4, 11], "co": 5, "platform": 5, "interfac": 5, "phase": 5, "unbalanc": 5, "fast": 5, "made": 5, "web": [2, 5], "tool": [2, 5], "public": 5, "most": 5, "code": 5, "document": [2, 5], "project": 5, "still": 5, "under": 5, "activ": 5, "improv": 5, "todo": 5, "tutori": 5, "analysi": [5, 6], "feeder": [5, 6], "case": [2, 5, 6], "readm": 5, "guid": [], "cite": [], "modul": [2, 5, 6], "search": [2, 5], "page": 5, "submodul": [6, 8], "content": 6, "charging_sim": 6, "batteryagingsim": 6, "batterypack": 6, "batterytest": 6, "capacitor": 6, "chargingst": 6, "electricitypric": 6, "optim": [2, 6], "orchestr": 6, "util": 6, "feeder_popul": [6, 8, 10], "glm_mod_funct": [6, 8, 10], "subpackag": 6, "test_cas": [6, 8], "event_handl": [6, 8], "gblvar": [6, 8], "glmptime": [6, 8], "voltdump2": [6, 8], "data_analysi": [6, 8], "event_handlers_oneshot": [6, 8], "parse_voltag": [6, 8], "feeder_population_old": [8, 10], "without": 3, "studi": 3, "character": 3, "what": 3, "would": 3, "occur": 3, "situ": 3, "wa": [2, 3], "make_scenario": [3, 6], "No": 3, "preload": 3, "reflect": 3, "run_scenario_singl": [3, 6], "singl": 3, "run_scenarios_parallel": [3, 6], "multiprocess": 3, "enough": 3, "core": 3, "ram": 3, "mai": [2, 3], "lead": 3, "process": 3, "freez": 3, "run_scenarios_sequenti": [3, 6], "combin": [2, 3], "fit": 2, "batt_sys_identif": 2, "battery_identif": 2, "batteryparam": [2, 6], "datafram": 2, "liter": 2, "how": 2, "pd": 2, "read_csv": 2, "data_path": 2, "run_sys_identif": [2, 6], "plot_correction_scheme_comparison": [2, 6], "download": 2, "ga": [2, 6], "num_gener": 2, "100": 2, "num_parents_m": 2, "sol_per_pop": 2, "num_gen": 2, "crossover_typ": 2, "single_point": 2, "mutation_typ": 2, "adapt": 2, "parent_selection_typ": 2, "sss": 2, "mutation_percent_gen": 2, "60": 2, "mutation_prob": 2, "crossover_prob": 2, "pygad": 2, "offici": 2, "explan": 2, "been": 2, "accuraci": 2, "speed": 2, "better": 2, "parent": 2, "form": 2, "next": 2, "offspr": 2, "solut": 2, "gene": 2, "cross": 2, "between": 2, "mate": 2, "mutat": 2, "undergo": 2, "probabl": 2, "appli": 2, "oper": 2, "Its": 2, "high": 2, "frequenc": 2, "ro": 2, "r_o": 2, "get_corrected_voltag": [2, 6], "get_uncorrected_voltag": [2, 6], "uncorrect": 2, "plot_ro": [2, 6], "xlim": 2, "20000": 2, "36000": 2, "ylim": 2, "75": 2, "85": 2, "run_ocv_correct": [2, 6], "use_quadrat": 2, "cell_nam": 2, "diagn": 2, "quadrat": 2, "run_pre_check": [2, 6], "check": 2, "length": 2, "begin": 2, "use_initial_pop": 2, "quadratic_bia": 2, "simulate_respons": [2, 6], "complet": 2}, "objects": {"": [[1, 0, 0, "-", "analysis"], [3, 0, 0, "-", "charging_sim"], [4, 0, 0, "-", "feeder_population"], [8, 0, 0, "-", "test_cases"]], "analysis": [[1, 0, 0, "-", "cost_analysis"]], "analysis.cost_analysis": [[1, 1, 1, "", "CostEstimator"]], "analysis.cost_analysis.CostEstimator": [[1, 2, 1, "", "calculate_battery_cost"], [1, 2, 1, "", "calculate_electricity_cost_PGEBEV2s"], [1, 2, 1, "", "calculate_solar_cost"], [1, 2, 1, "", "calculate_trans_loss_of_life"], [1, 2, 1, "", "plot_loads"], [1, 2, 1, "", "plot_power"], [1, 2, 1, "", "plot_soc"], [1, 2, 1, "", "solar_cost"], [1, 2, 1, "", "transformer_cost"]], "batt_sys_identification": [[2, 0, 0, "-", "battery_identification"]], "batt_sys_identification.battery_identification": [[2, 1, 1, "", "BatteryParams"]], "batt_sys_identification.battery_identification.BatteryParams": [[2, 2, 1, "", "ga"], [2, 2, 1, "", "get_Ro"], [2, 2, 1, "", "get_corrected_voltages"], [2, 2, 1, "", "get_uncorrected_voltages"], [2, 2, 1, "", "plot_Ro"], [2, 2, 1, "", "plot_correction_scheme_comparison"], [2, 2, 1, "", "run_ocv_correction"], [2, 2, 1, "", "run_pre_checks"], [2, 2, 1, "", "run_sys_identification"], [2, 2, 1, "", "simulate_response"]], "charging_sim": [[3, 0, 0, "-", "battery"], [3, 0, 0, "-", "batteryAgingSim"], [3, 0, 0, "-", "batterypack"], [3, 0, 0, "-", "capacitor"], [3, 0, 0, "-", "chargingStation"], [3, 0, 0, "-", "controller"], [3, 0, 0, "-", "electricityPrices"], [3, 0, 0, "-", "optimization"], [3, 0, 0, "-", "orchestrator"], [3, 0, 0, "-", "simulate"], [3, 0, 0, "-", "solar"], [3, 0, 0, "-", "utils"]], "charging_sim.battery": [[3, 1, 1, "", "Battery"], [3, 3, 1, "", "test"]], "charging_sim.battery.Battery": [[3, 2, 1, "", "battery_setup"], [3, 2, 1, "", "battery_setup_2"], [3, 2, 1, "", "dynamics"], [3, 2, 1, "", "est_calendar_aging"], [3, 2, 1, "", "est_cyc_aging"], [3, 2, 1, "", "get_OCV"], [3, 2, 1, "", "get_Ro"], [3, 2, 1, "", "get_aging_value"], [3, 2, 1, "", "get_power_profile"], [3, 2, 1, "", "get_properties"], [3, 2, 1, "", "get_roundtrip_efficiency"], [3, 2, 1, "", "get_total_aging"], [3, 2, 1, "", "get_true_power"], [3, 2, 1, "", "save_sim_data"], [3, 2, 1, "", "save_states"], [3, 2, 1, "", "state_eqn"], [3, 2, 1, "", "thermal_dynamics"], [3, 2, 1, "", "track_SOC"], [3, 2, 1, "", "update_SOC"], [3, 2, 1, "", "update_capacity"], [3, 2, 1, "", "update_max_current"], [3, 2, 1, "", "update_params"], [3, 2, 1, "", "update_voltage"], [3, 2, 1, "", "visualize"]], "charging_sim.batteryAgingSim": [[3, 1, 1, "", "BatteryAging"]], "charging_sim.batteryAgingSim.BatteryAging": [[3, 2, 1, "", "LFP_cal_aging"], [3, 2, 1, "", "LFP_cyc_aging"], [3, 2, 1, "", "NMC_cal_aging"], [3, 2, 1, "", "NMC_cyc_aging"], [3, 2, 1, "", "get_aging_value"], [3, 2, 1, "", "get_calendar_aging"], [3, 2, 1, "", "get_cyc_aging"], [3, 2, 1, "", "get_total_aging"], [3, 2, 1, "", "run"], [3, 2, 1, "", "update_capacity"], [3, 2, 1, "", "update_resistance"]], "charging_sim.batterypack": [[3, 1, 1, "", "Battery"], [3, 3, 1, "", "test"]], "charging_sim.batterypack.Battery": [[3, 4, 1, "", "R_pack"], [3, 2, 1, "", "battery_setup"], [3, 2, 1, "", "battery_setup_2"], [3, 4, 1, "", "battery_type"], [3, 4, 1, "", "config"], [3, 4, 1, "", "controller"], [3, 2, 1, "", "dynamics"], [3, 2, 1, "", "est_calendar_aging"], [3, 2, 1, "", "est_cyc_aging"], [3, 2, 1, "", "get_OCV"], [3, 2, 1, "", "get_aging_value"], [3, 2, 1, "", "get_power_profile"], [3, 2, 1, "", "get_roundtrip_efficiency"], [3, 2, 1, "", "get_total_aging"], [3, 2, 1, "", "get_true_power"], [3, 2, 1, "", "load_pack_props"], [3, 4, 1, "", "nominal_pack_cap"], [3, 2, 1, "", "save_sim_data"], [3, 2, 1, "", "state_eqn"], [3, 2, 1, "", "thermal_dynamics"], [3, 2, 1, "", "track_SOC"], [3, 2, 1, "", "update_capacity"], [3, 2, 1, "", "update_max_current"], [3, 2, 1, "", "update_voltage"], [3, 2, 1, "", "visualize"]], "charging_sim.capacitor": [[3, 1, 1, "", "Capacitor"]], "charging_sim.chargingStation": [[3, 1, 1, "", "ChargingStation"]], "charging_sim.chargingStation.ChargingStation": [[3, 2, 1, "", "get_current_load"], [3, 2, 1, "", "is_EV_arrived"], [3, 2, 1, "", "is_charging"], [3, 2, 1, "", "save_sim_data"], [3, 2, 1, "", "set_current_load"], [3, 2, 1, "", "update_load"], [3, 2, 1, "", "update_load_oneshot"], [3, 2, 1, "", "update_status"], [3, 2, 1, "", "visualize"]], "charging_sim.controller": [[3, 1, 1, "", "MPC"], [3, 1, 1, "", "Oneshot"]], "charging_sim.controller.MPC": [[3, 2, 1, "", "compute_control"], [3, 2, 1, "", "get_battery_constraints"], [3, 2, 1, "", "initialize_forecast_data"], [3, 2, 1, "", "load_battery_ocv"], [3, 2, 1, "", "reset_load"]], "charging_sim.controller.Oneshot": [[3, 2, 1, "", "compute_control"], [3, 2, 1, "", "get_battery_constraints"], [3, 2, 1, "", "load_battery_ocv"], [3, 2, 1, "", "reset_load"]], "charging_sim.electricityPrices": [[3, 1, 1, "", "PriceLoader"], [3, 3, 1, "", "main"]], "charging_sim.electricityPrices.PriceLoader": [[3, 2, 1, "", "downscale"], [3, 2, 1, "", "get_prices"], [3, 2, 1, "", "set_month_data"]], "charging_sim.optimization": [[3, 1, 1, "", "Optimization"]], "charging_sim.optimization.Optimization": [[3, 2, 1, "", "add_demand_charge"], [3, 2, 1, "", "aggregate_constraints"], [3, 2, 1, "", "build_battery_cost"], [3, 2, 1, "", "build_emissions_cost"], [3, 2, 1, "", "build_transformer_cost"], [3, 2, 1, "", "get_battery_constraint"], [3, 2, 1, "", "get_constraints"], [3, 2, 1, "", "run"]], "charging_sim.orchestrator": [[3, 1, 1, "", "ChargingSim"]], "charging_sim.orchestrator.ChargingSim": [[3, 2, 1, "", "create_battery_object"], [3, 2, 1, "", "create_charging_stations"], [3, 2, 1, "", "create_charging_stations_oneshot"], [3, 2, 1, "", "create_solar_object"], [3, 2, 1, "", "get_action"], [3, 2, 1, "", "get_charger_obj_by_loc"], [3, 2, 1, "", "get_charging_sites"], [3, 2, 1, "", "initialize_aging_sim"], [3, 2, 1, "", "initialize_controllers"], [3, 2, 1, "", "initialize_price_loader"], [3, 2, 1, "", "initialize_solar_module"], [3, 2, 1, "", "load_battery_params"], [3, 2, 1, "", "load_config"], [3, 2, 1, "", "load_results_summary"], [3, 2, 1, "", "multistep"], [3, 2, 1, "", "reset_loads"], [3, 2, 1, "", "setup"], [3, 2, 1, "", "step"], [3, 2, 1, "", "update_scenario"], [3, 2, 1, "", "update_steps"]], "charging_sim.simulate": [[3, 3, 1, "", "make_scenarios"], [3, 3, 1, "", "run"], [3, 3, 1, "", "run_scenario_single"], [3, 3, 1, "", "run_scenarios_parallel"], [3, 3, 1, "", "run_scenarios_sequential"]], "charging_sim.solar": [[3, 1, 1, "", "Solar"], [3, 3, 1, "", "main"]], "charging_sim.solar.Solar": [[3, 2, 1, "", "downscale"], [3, 2, 1, "", "get_constraints"], [3, 2, 1, "", "get_power"], [3, 2, 1, "", "get_solar_output"], [3, 2, 1, "", "modify_res"], [3, 2, 1, "", "update_history"]], "charging_sim.utils": [[3, 3, 1, "", "PGE_BEV2_S"], [3, 3, 1, "", "add_power_profile_to_object"], [3, 3, 1, "", "build_cost_PGE_BEV2S"], [3, 3, 1, "", "build_electricity_cost"], [3, 3, 1, "", "build_objective"], [3, 3, 1, "", "load_prices"]], "feeder_population": [[4, 0, 0, "-", "glm_mod_functions"]], "feeder_population.glm_mod_functions": [[4, 3, 1, "", "load_base_glm"], [4, 3, 1, "", "replace_load_w_meter"], [4, 3, 1, "", "replace_load_w_meter_old"], [4, 3, 1, "", "write_base_glm"], [4, 3, 1, "", "write_class_dict"], [4, 3, 1, "", "write_clock_dict"], [4, 3, 1, "", "write_filter_dict"], [4, 3, 1, "", "write_mod_dict"], [4, 3, 1, "", "write_obj_dict"]], "test_cases": [[9, 0, 0, "-", "base_case"], [10, 0, 0, "-", "battery"]], "test_cases.battery": [[11, 0, 0, "-", "feeder_population"]], "test_cases.battery.feeder_population": [[11, 0, 0, "-", "glm_mod_functions"]], "test_cases.battery.feeder_population.glm_mod_functions": [[11, 3, 1, "", "load_base_glm"], [11, 3, 1, "", "replace_load_w_meter"], [11, 3, 1, "", "replace_load_w_meter_old"], [11, 3, 1, "", "write_base_glm"], [11, 3, 1, "", "write_class_dict"], [11, 3, 1, "", "write_clock_dict"], [11, 3, 1, "", "write_filter_dict"], [11, 3, 1, "", "write_mod_dict"], [11, 3, 1, "", "write_obj_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"ev": [0, 5], "ecosim": [0, 5], "platform": 0, "author": 0, "requir": 0, "folder": 0, "descript": 0, "ambient_data": 0, "base_load_data": 0, "batt_sys_identif": 0, "charging_sim": [0, 3], "batteri": [0, 2, 3, 10, 11], "py": 0, "cell": 0, "modul": [0, 1, 3, 4, 8, 9, 10, 11], "batterypack": [0, 3], "pack": 0, "batteryagingsim": [0, 3], "ag": 0, "control": [0, 3], "chargingst": [0, 3], "charg": [0, 3], "station": 0, "electricitypric": [0, 3], "electr": 0, "price": 0, "optim": [0, 3], "orchestr": [0, 3], "simul": [0, 1, 3], "solar": [0, 3], "pv": 0, "util": [0, 3], "host": 0, "function": 0, "us": 0, "some": 0, "offlin": 0, "der": 0, "cost": 0, "minim": 0, "thi": 0, "i": 0, "run": 0, "mode": 0, "state": 0, "feedback": 0, "dlmodel": 0, "elec_r": 0, "feeder": [0, 4], "feeder_popul": [0, 4, 11], "solar_data": 0, "test_cas": [0, 9, 10, 11], "co": 0, "case": [0, 8], "analysi": [0, 1], "how": 0, "post": [0, 1], "packag": [6, 9, 10, 11], "submodul": [1, 2, 3, 4, 9, 10, 11], "cost_analysi": 1, "load_post_opt_cost": 1, "plot_result": 1, "content": [1, 3, 4, 5, 8, 9, 10, 11], "batterytest": 3, "capacitor": 3, "popul": 4, "glm_mod_funct": [4, 11], "welcom": 5, "1": 5, "0": 5, "indic": 5, "tabl": 5, "test": 8, "subpackag": [8, 10], "base_cas": 9, "event_handl": [9, 10], "gblvar": [9, 10], "glmptime": [9, 10], "master_sim": [9, 10], "sim": [9, 10], "voltdump2": [9, 10], "data_analysi": 10, "event_handlers_oneshot": 10, "parse_voltag": 10, "scenario": 10, "feeder_population_old": 11, "readm": 7, "system": 2, "identif": 2}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Test cases": [[8, "test-cases"]], "Subpackages": [[8, "subpackages"], [10, "subpackages"]], "Module contents": [[8, "module-test_cases"], [1, "module-analysis"], [3, "module-charging_sim"], [4, "module-feeder_population"], [9, "module-test_cases.base_case"], [10, "module-test_cases.battery"], [11, "module-test_cases.battery.feeder_population"]], "Welcome to EV-Ecosim 1.0.0": [[5, "welcome-to-ev-ecosim-1-0-0"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]], "Submodules": [[2, "submodules"], [1, "submodules"], [3, "submodules"], [4, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"]], "Battery System Identification": [[2, "battery-system-identification"]], "Battery system identification": [[2, "id1"]], "EV-Ecosim platform": [[0, "ev-ecosim-platform"]], "Authors": [[0, "authors"]], "Requirements": [[0, "requirements"]], "Folder descriptions": [[0, "folder-descriptions"]], "ambient_data": [[0, "ambient-data"]], "base_load_data": [[0, "base-load-data"]], "batt_sys_identification": [[0, "batt-sys-identification"]], "charging_sim": [[0, "charging-sim"]], "battery.py - Battery cell module.": [[0, "battery-py-battery-cell-module"]], "batterypack.py - Battery pack module.": [[0, "batterypack-py-battery-pack-module"]], "batteryAgingSim.py - Battery aging module.": [[0, "batteryagingsim-py-battery-aging-module"]], "controller.py - Controller module.": [[0, "controller-py-controller-module"]], "chargingStation.py - Charging station module.": [[0, "chargingstation-py-charging-station-module"]], "electricityPrices.py - Electricity prices module.": [[0, "electricityprices-py-electricity-prices-module"]], "optimization.py - Optimization module.": [[0, "optimization-py-optimization-module"]], "orchestrator.py - Simulation orchestrator module.": [[0, "orchestrator-py-simulation-orchestrator-module"]], "solar.py - Solar PV module.": [[0, "solar-py-solar-pv-module"]], "utils.py - Hosts utility functions used by some modules.": [[0, "utils-py-hosts-utility-functions-used-by-some-modules"]], "simulate.py - Offline DER control optimization for cost minimization (this is run for offline mode (no state feedback)).": [[0, "simulate-py-offline-der-control-optimization-for-cost-minimization-this-is-run-for-offline-mode-no-state-feedback"]], "DLMODELS": [[0, "dlmodels"]], "elec_rates": [[0, "elec-rates"]], "feeders": [[0, "feeders"]], "feeder_population": [[0, "feeder-population"]], "solar_data": [[0, "solar-data"]], "test_cases": [[0, "test-cases"]], "Co-simulation cases.": [[0, "co-simulation-cases"]], "analysis": [[0, "analysis"]], "How to run": [[0, "how-to-run"]], "Post-simulation analysis": [[0, "post-simulation-analysis"], [1, "post-simulation-analysis"]], "cost_analysis module": [[1, "module-analysis.cost_analysis"]], "load_post_opt_costs module": [[1, "load-post-opt-costs-module"]], "plot_results module": [[1, "plot-results-module"]], "Charging simulator": [[3, "charging-simulator"]], "charging_sim.battery module": [[3, "module-charging_sim.battery"]], "charging_sim.batteryAgingSim module": [[3, "module-charging_sim.batteryAgingSim"]], "charging_sim.batterypack module": [[3, "module-charging_sim.batterypack"]], "charging_sim.batterytest module": [[3, "charging-sim-batterytest-module"]], "charging_sim.capacitor module": [[3, "module-charging_sim.capacitor"]], "charging_sim.chargingStation module": [[3, "module-charging_sim.chargingStation"]], "charging_sim.controller module": [[3, "module-charging_sim.controller"]], "charging_sim.electricityPrices module": [[3, "module-charging_sim.electricityPrices"]], "charging_sim.optimization module": [[3, "module-charging_sim.optimization"]], "charging_sim.orchestrator module": [[3, "module-charging_sim.orchestrator"]], "charging_sim.simulate module": [[3, "module-charging_sim.simulate"]], "charging_sim.solar module": [[3, "module-charging_sim.solar"]], "charging_sim.utils module": [[3, "module-charging_sim.utils"]], "Feeder population": [[4, "feeder-population"]], "feeder_population.feeder_population module": [[4, "feeder-population-feeder-population-module"]], "feeder_population.glm_mod_functions module": [[4, "module-feeder_population.glm_mod_functions"]], "Packages": [[6, "packages"]], "Readme": [[7, "readme"]], "test_cases.base_case package": [[9, "test-cases-base-case-package"]], "test_cases.base_case.event_handlers module": [[9, "test-cases-base-case-event-handlers-module"]], "test_cases.base_case.gblvar module": [[9, "test-cases-base-case-gblvar-module"]], "test_cases.base_case.glmptime module": [[9, "test-cases-base-case-glmptime-module"]], "test_cases.base_case.master_sim module": [[9, "test-cases-base-case-master-sim-module"]], "test_cases.base_case.sim module": [[9, "test-cases-base-case-sim-module"]], "test_cases.base_case.voltdump2 module": [[9, "test-cases-base-case-voltdump2-module"]], "test_cases.battery package": [[10, "test-cases-battery-package"]], "test_cases.battery.data_analysis module": [[10, "test-cases-battery-data-analysis-module"]], "test_cases.battery.event_handlers module": [[10, "test-cases-battery-event-handlers-module"]], "test_cases.battery.event_handlers_oneshot module": [[10, "test-cases-battery-event-handlers-oneshot-module"]], "test_cases.battery.gblvar module": [[10, "test-cases-battery-gblvar-module"]], "test_cases.battery.glmptime module": [[10, "test-cases-battery-glmptime-module"]], "test_cases.battery.master_sim module": [[10, "test-cases-battery-master-sim-module"]], "test_cases.battery.parse_voltages module": [[10, "test-cases-battery-parse-voltages-module"]], "test_cases.battery.scenarios module": [[10, "test-cases-battery-scenarios-module"]], "test_cases.battery.sim module": [[10, "test-cases-battery-sim-module"]], "test_cases.battery.voltdump2 module": [[10, "test-cases-battery-voltdump2-module"]], "test_cases.battery.feeder_population package": [[11, "test-cases-battery-feeder-population-package"]], "test_cases.battery.feeder_population.feeder_population module": [[11, "test-cases-battery-feeder-population-feeder-population-module"]], "test_cases.battery.feeder_population.feeder_population_old module": [[11, "test-cases-battery-feeder-population-feeder-population-old-module"]], "test_cases.battery.feeder_population.glm_mod_functions module": [[11, "module-test_cases.battery.feeder_population.glm_mod_functions"]]}, "indexentries": {"costestimator (class in analysis.cost_analysis)": [[1, "analysis.cost_analysis.CostEstimator"]], "analysis": [[1, "module-analysis"]], "analysis.cost_analysis": [[1, "module-analysis.cost_analysis"]], "calculate_battery_cost() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.calculate_battery_cost"]], "calculate_electricity_cost_pgebev2s() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.calculate_electricity_cost_PGEBEV2s"]], "calculate_solar_cost() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.calculate_solar_cost"]], "calculate_trans_loss_of_life() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.calculate_trans_loss_of_life"]], "module": [[1, "module-analysis"], [1, "module-analysis.cost_analysis"], [3, "module-charging_sim"], [3, "module-charging_sim.battery"], [3, "module-charging_sim.batteryAgingSim"], [3, "module-charging_sim.batterypack"], [3, "module-charging_sim.capacitor"], [3, "module-charging_sim.chargingStation"], [3, "module-charging_sim.controller"], [3, "module-charging_sim.electricityPrices"], [3, "module-charging_sim.optimization"], [3, "module-charging_sim.orchestrator"], [3, "module-charging_sim.simulate"], [3, "module-charging_sim.solar"], [3, "module-charging_sim.utils"], [4, "module-feeder_population"], [4, "module-feeder_population.glm_mod_functions"], [8, "module-test_cases"], [9, "module-test_cases.base_case"], [10, "module-test_cases.battery"], [11, "module-test_cases.battery.feeder_population"], [11, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "plot_loads() (analysis.cost_analysis.costestimator static method)": [[1, "analysis.cost_analysis.CostEstimator.plot_loads"]], "plot_power() (analysis.cost_analysis.costestimator static method)": [[1, "analysis.cost_analysis.CostEstimator.plot_power"]], "plot_soc() (analysis.cost_analysis.costestimator static method)": [[1, "analysis.cost_analysis.CostEstimator.plot_soc"]], "solar_cost() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.solar_cost"]], "transformer_cost() (analysis.cost_analysis.costestimator method)": [[1, "analysis.cost_analysis.CostEstimator.transformer_cost"]], "battery (class in charging_sim.battery)": [[3, "charging_sim.battery.Battery"]], "battery (class in charging_sim.batterypack)": [[3, "charging_sim.batterypack.Battery"]], "batteryaging (class in charging_sim.batteryagingsim)": [[3, "charging_sim.batteryAgingSim.BatteryAging"]], "capacitor (class in charging_sim.capacitor)": [[3, "charging_sim.capacitor.Capacitor"]], "chargingsim (class in charging_sim.orchestrator)": [[3, "charging_sim.orchestrator.ChargingSim"]], "chargingstation (class in charging_sim.chargingstation)": [[3, "charging_sim.chargingStation.ChargingStation"]], "lfp_cal_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.LFP_cal_aging"]], "lfp_cyc_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.LFP_cyc_aging"]], "mpc (class in charging_sim.controller)": [[3, "charging_sim.controller.MPC"]], "nmc_cal_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.NMC_cal_aging"]], "nmc_cyc_aging() (charging_sim.batteryagingsim.batteryaging static method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.NMC_cyc_aging"]], "oneshot (class in charging_sim.controller)": [[3, "charging_sim.controller.Oneshot"]], "optimization (class in charging_sim.optimization)": [[3, "charging_sim.optimization.Optimization"]], "pge_bev2_s() (in module charging_sim.utils)": [[3, "charging_sim.utils.PGE_BEV2_S"]], "priceloader (class in charging_sim.electricityprices)": [[3, "charging_sim.electricityPrices.PriceLoader"]], "r_pack (charging_sim.batterypack.battery attribute)": [[3, "charging_sim.batterypack.Battery.R_pack"]], "solar (class in charging_sim.solar)": [[3, "charging_sim.solar.Solar"]], "add_demand_charge() (charging_sim.optimization.optimization method)": [[3, "charging_sim.optimization.Optimization.add_demand_charge"]], "add_power_profile_to_object() (in module charging_sim.utils)": [[3, "charging_sim.utils.add_power_profile_to_object"]], "aggregate_constraints() (charging_sim.optimization.optimization method)": [[3, "charging_sim.optimization.Optimization.aggregate_constraints"]], "battery_setup() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.battery_setup"]], "battery_setup() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.battery_setup"]], "battery_setup_2() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.battery_setup_2"]], "battery_setup_2() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.battery_setup_2"]], "battery_type (charging_sim.batterypack.battery attribute)": [[3, "charging_sim.batterypack.Battery.battery_type"]], "build_battery_cost() (charging_sim.optimization.optimization method)": [[3, "charging_sim.optimization.Optimization.build_battery_cost"]], "build_cost_pge_bev2s() (in module charging_sim.utils)": [[3, "charging_sim.utils.build_cost_PGE_BEV2S"]], "build_electricity_cost() (in module charging_sim.utils)": [[3, "charging_sim.utils.build_electricity_cost"]], "build_emissions_cost() (charging_sim.optimization.optimization method)": [[3, "charging_sim.optimization.Optimization.build_emissions_cost"]], "build_objective() (in module charging_sim.utils)": [[3, "charging_sim.utils.build_objective"]], "build_transformer_cost() (charging_sim.optimization.optimization method)": [[3, "charging_sim.optimization.Optimization.build_transformer_cost"]], "charging_sim": [[3, "module-charging_sim"]], "charging_sim.battery": [[3, "module-charging_sim.battery"]], "charging_sim.batteryagingsim": [[3, "module-charging_sim.batteryAgingSim"]], "charging_sim.batterypack": [[3, "module-charging_sim.batterypack"]], "charging_sim.capacitor": [[3, "module-charging_sim.capacitor"]], "charging_sim.chargingstation": [[3, "module-charging_sim.chargingStation"]], "charging_sim.controller": [[3, "module-charging_sim.controller"]], "charging_sim.electricityprices": [[3, "module-charging_sim.electricityPrices"]], "charging_sim.optimization": [[3, "module-charging_sim.optimization"]], "charging_sim.orchestrator": [[3, "module-charging_sim.orchestrator"]], "charging_sim.simulate": [[3, "module-charging_sim.simulate"]], "charging_sim.solar": [[3, "module-charging_sim.solar"]], "charging_sim.utils": [[3, "module-charging_sim.utils"]], "compute_control() (charging_sim.controller.mpc method)": [[3, "charging_sim.controller.MPC.compute_control"]], "compute_control() (charging_sim.controller.oneshot method)": [[3, "charging_sim.controller.Oneshot.compute_control"]], "config (charging_sim.batterypack.battery attribute)": [[3, "charging_sim.batterypack.Battery.config"]], "controller (charging_sim.batterypack.battery attribute)": [[3, "charging_sim.batterypack.Battery.controller"]], "create_battery_object() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.create_battery_object"]], "create_charging_stations() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.create_charging_stations"]], "create_charging_stations_oneshot() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.create_charging_stations_oneshot"]], "create_solar_object() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.create_solar_object"]], "downscale() (charging_sim.electricityprices.priceloader method)": [[3, "charging_sim.electricityPrices.PriceLoader.downscale"]], "downscale() (charging_sim.solar.solar method)": [[3, "charging_sim.solar.Solar.downscale"]], "dynamics() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.dynamics"]], "dynamics() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.dynamics"]], "est_calendar_aging() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.est_calendar_aging"]], "est_calendar_aging() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.est_calendar_aging"]], "est_cyc_aging() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.est_cyc_aging"]], "est_cyc_aging() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.est_cyc_aging"]], "get_ocv() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.get_OCV"]], "get_ocv() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.get_OCV"]], "get_ro() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.get_Ro"]], "get_action() (charging_sim.orchestrator.chargingsim static method)": [[3, "charging_sim.orchestrator.ChargingSim.get_action"]], "get_aging_value() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.get_aging_value"]], "get_aging_value() (charging_sim.batteryagingsim.batteryaging method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.get_aging_value"]], "get_aging_value() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.get_aging_value"]], "get_battery_constraint() (charging_sim.optimization.optimization method)": [[3, "charging_sim.optimization.Optimization.get_battery_constraint"]], "get_battery_constraints() (charging_sim.controller.mpc method)": [[3, "charging_sim.controller.MPC.get_battery_constraints"]], "get_battery_constraints() (charging_sim.controller.oneshot method)": [[3, "charging_sim.controller.Oneshot.get_battery_constraints"]], "get_calendar_aging() (charging_sim.batteryagingsim.batteryaging method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.get_calendar_aging"]], "get_charger_obj_by_loc() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.get_charger_obj_by_loc"]], "get_charging_sites() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.get_charging_sites"]], "get_constraints() (charging_sim.optimization.optimization method)": [[3, "charging_sim.optimization.Optimization.get_constraints"]], "get_constraints() (charging_sim.solar.solar method)": [[3, "charging_sim.solar.Solar.get_constraints"]], "get_current_load() (charging_sim.chargingstation.chargingstation method)": [[3, "charging_sim.chargingStation.ChargingStation.get_current_load"]], "get_cyc_aging() (charging_sim.batteryagingsim.batteryaging method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.get_cyc_aging"]], "get_power() (charging_sim.solar.solar method)": [[3, "charging_sim.solar.Solar.get_power"]], "get_power_profile() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.get_power_profile"]], "get_power_profile() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.get_power_profile"]], "get_prices() (charging_sim.electricityprices.priceloader method)": [[3, "charging_sim.electricityPrices.PriceLoader.get_prices"]], "get_properties() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.get_properties"]], "get_roundtrip_efficiency() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.get_roundtrip_efficiency"]], "get_roundtrip_efficiency() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.get_roundtrip_efficiency"]], "get_solar_output() (charging_sim.solar.solar method)": [[3, "charging_sim.solar.Solar.get_solar_output"]], "get_total_aging() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.get_total_aging"]], "get_total_aging() (charging_sim.batteryagingsim.batteryaging method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.get_total_aging"]], "get_total_aging() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.get_total_aging"]], "get_true_power() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.get_true_power"]], "get_true_power() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.get_true_power"]], "initialize_aging_sim() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.initialize_aging_sim"]], "initialize_controllers() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.initialize_controllers"]], "initialize_forecast_data() (charging_sim.controller.mpc method)": [[3, "charging_sim.controller.MPC.initialize_forecast_data"]], "initialize_price_loader() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.initialize_price_loader"]], "initialize_solar_module() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.initialize_solar_module"]], "is_ev_arrived() (charging_sim.chargingstation.chargingstation method)": [[3, "charging_sim.chargingStation.ChargingStation.is_EV_arrived"]], "is_charging() (charging_sim.chargingstation.chargingstation method)": [[3, "charging_sim.chargingStation.ChargingStation.is_charging"]], "load_battery_ocv() (charging_sim.controller.mpc method)": [[3, "charging_sim.controller.MPC.load_battery_ocv"]], "load_battery_ocv() (charging_sim.controller.oneshot method)": [[3, "charging_sim.controller.Oneshot.load_battery_ocv"]], "load_battery_params() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.load_battery_params"]], "load_config() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.load_config"]], "load_pack_props() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.load_pack_props"]], "load_prices() (in module charging_sim.utils)": [[3, "charging_sim.utils.load_prices"]], "load_results_summary() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.load_results_summary"]], "main() (in module charging_sim.electricityprices)": [[3, "charging_sim.electricityPrices.main"]], "main() (in module charging_sim.solar)": [[3, "charging_sim.solar.main"]], "make_scenarios() (in module charging_sim.simulate)": [[3, "charging_sim.simulate.make_scenarios"]], "modify_res() (charging_sim.solar.solar method)": [[3, "charging_sim.solar.Solar.modify_res"]], "multistep() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.multistep"]], "nominal_pack_cap (charging_sim.batterypack.battery attribute)": [[3, "charging_sim.batterypack.Battery.nominal_pack_cap"]], "reset_load() (charging_sim.controller.mpc method)": [[3, "charging_sim.controller.MPC.reset_load"]], "reset_load() (charging_sim.controller.oneshot method)": [[3, "charging_sim.controller.Oneshot.reset_load"]], "reset_loads() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.reset_loads"]], "run() (charging_sim.batteryagingsim.batteryaging method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.run"]], "run() (charging_sim.optimization.optimization method)": [[3, "charging_sim.optimization.Optimization.run"]], "run() (in module charging_sim.simulate)": [[3, "charging_sim.simulate.run"]], "run_scenario_single() (in module charging_sim.simulate)": [[3, "charging_sim.simulate.run_scenario_single"]], "run_scenarios_parallel() (in module charging_sim.simulate)": [[3, "charging_sim.simulate.run_scenarios_parallel"]], "run_scenarios_sequential() (in module charging_sim.simulate)": [[3, "charging_sim.simulate.run_scenarios_sequential"]], "save_sim_data() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.save_sim_data"]], "save_sim_data() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.save_sim_data"]], "save_sim_data() (charging_sim.chargingstation.chargingstation method)": [[3, "charging_sim.chargingStation.ChargingStation.save_sim_data"]], "save_states() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.save_states"]], "set_current_load() (charging_sim.chargingstation.chargingstation method)": [[3, "charging_sim.chargingStation.ChargingStation.set_current_load"]], "set_month_data() (charging_sim.electricityprices.priceloader method)": [[3, "charging_sim.electricityPrices.PriceLoader.set_month_data"]], "setup() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.setup"]], "state_eqn() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.state_eqn"]], "state_eqn() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.state_eqn"]], "step() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.step"]], "test() (in module charging_sim.battery)": [[3, "charging_sim.battery.test"]], "test() (in module charging_sim.batterypack)": [[3, "charging_sim.batterypack.test"]], "thermal_dynamics() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.thermal_dynamics"]], "thermal_dynamics() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.thermal_dynamics"]], "track_soc() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.track_SOC"]], "track_soc() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.track_SOC"]], "update_soc() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.update_SOC"]], "update_capacity() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.update_capacity"]], "update_capacity() (charging_sim.batteryagingsim.batteryaging method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.update_capacity"]], "update_capacity() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.update_capacity"]], "update_history() (charging_sim.solar.solar method)": [[3, "charging_sim.solar.Solar.update_history"]], "update_load() (charging_sim.chargingstation.chargingstation method)": [[3, "charging_sim.chargingStation.ChargingStation.update_load"]], "update_load_oneshot() (charging_sim.chargingstation.chargingstation method)": [[3, "charging_sim.chargingStation.ChargingStation.update_load_oneshot"]], "update_max_current() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.update_max_current"]], "update_max_current() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.update_max_current"]], "update_params() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.update_params"]], "update_resistance() (charging_sim.batteryagingsim.batteryaging method)": [[3, "charging_sim.batteryAgingSim.BatteryAging.update_resistance"]], "update_scenario() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.update_scenario"]], "update_status() (charging_sim.chargingstation.chargingstation method)": [[3, "charging_sim.chargingStation.ChargingStation.update_status"]], "update_steps() (charging_sim.orchestrator.chargingsim method)": [[3, "charging_sim.orchestrator.ChargingSim.update_steps"]], "update_voltage() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.update_voltage"]], "update_voltage() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.update_voltage"]], "visualize() (charging_sim.battery.battery method)": [[3, "charging_sim.battery.Battery.visualize"]], "visualize() (charging_sim.batterypack.battery method)": [[3, "charging_sim.batterypack.Battery.visualize"]], "visualize() (charging_sim.chargingstation.chargingstation method)": [[3, "charging_sim.chargingStation.ChargingStation.visualize"]], "feeder_population": [[4, "module-feeder_population"]], "feeder_population.glm_mod_functions": [[4, "module-feeder_population.glm_mod_functions"]], "load_base_glm() (in module feeder_population.glm_mod_functions)": [[4, "feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module feeder_population.glm_mod_functions)": [[4, "feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module feeder_population.glm_mod_functions)": [[4, "feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "write_base_glm() (in module feeder_population.glm_mod_functions)": [[4, "feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module feeder_population.glm_mod_functions)": [[4, "feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module feeder_population.glm_mod_functions)": [[4, "feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module feeder_population.glm_mod_functions)": [[4, "feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module feeder_population.glm_mod_functions)": [[4, "feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module feeder_population.glm_mod_functions)": [[4, "feeder_population.glm_mod_functions.write_obj_dict"]], "test_cases": [[8, "module-test_cases"]], "test_cases.base_case": [[9, "module-test_cases.base_case"]], "test_cases.battery": [[10, "module-test_cases.battery"]], "load_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[11, "test_cases.battery.feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[11, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[11, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "test_cases.battery.feeder_population": [[11, "module-test_cases.battery.feeder_population"]], "test_cases.battery.feeder_population.glm_mod_functions": [[11, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "write_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[11, "test_cases.battery.feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[11, "test_cases.battery.feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[11, "test_cases.battery.feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[11, "test_cases.battery.feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[11, "test_cases.battery.feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[11, "test_cases.battery.feeder_population.glm_mod_functions.write_obj_dict"]]}})