Search.setIndex({"docnames": ["analysis", "charging_sim", "feeder_population", "index", "modules", "test_cases", "test_cases.base_case", "test_cases.battery", "test_cases.battery.feeder_population"], "filenames": ["analysis.rst", "charging_sim.rst", "feeder_population.rst", "index.rst", "modules.rst", "test_cases.rst", "test_cases.base_case.rst", "test_cases.battery.rst", "test_cases.battery.feeder_population.rst"], "titles": ["analysis package", "charging_sim package", "feeder_population package", "Welcome to EV-Ecosim 1.0.0", "EV50_cosimulation", "test_cases package", "test_cases.base_case package", "test_cases.battery package", "test_cases.battery.feeder_population package"], "terms": {"index": [1, 3], "modul": [3, 4], "search": 3, "page": 3, "thi": [0, 1, 2, 3], "file": [0, 1, 2, 8], "host": 1, "costestim": [0, 4], "class": [0, 1, 2, 8], "which": [0, 1], "estim": [0, 1, 3], "cost": [0, 1], "differ": [0, 1], "grid": [0, 1, 3], "der": [0, 1], "compon": 0, "from": [0, 1], "simul": [0, 3, 4], "num_dai": 0, "sourc": [0, 1, 2, 8], "base": [0, 1, 3], "object": [0, 1, 2, 8], "i": [0, 1, 3], "us": [0, 1, 3], "calcul": 0, "level": [0, 1], "asset": [0, 1], "ev": [0, 1], "ecosim": [0, 1], "calculate_lco": [], "electr": [0, 1], "storag": 1, "calculate_battery_cost": [0, 4], "result_dir": 0, "input": 1, "directori": 0, "save": [0, 1], "result": [0, 1], "dictionari": [0, 1, 2, 8], "return": [0, 1, 2], "result_dict": 0, "calculate_electricity_cost_pgebev2": [0, 4], "pge_separate_fil": 0, "true": [0, 1], "overal": [0, 1], "pgebev2": 0, "given": [0, 1], "scenario": [0, 1, 4, 5], "boolean": 1, "note": 1, "pge": 1, "block": [], "separ": 1, "A": [0, 1, 3], "compris": 0, "all": [0, 1, 2, 8], "dollar": 0, "amount": 0, "calculate_solar_cost": [0, 4], "ref": [0, 1], "http": [0, 1], "www": [0, 1], "nrel": 0, "gov": 0, "solar": [0, 3, 4], "market": 0, "research": 0, "html": 0, "valu": [0, 1], "ar": [0, 1], "pull": [0, 1], "calculate_trans_loss_of_lif": [0, 4], "expect": 0, "transform": [0, 1], "loss": [0, 1], "life": [0, 1], "static": [0, 1], "plot_load": [0, 4], "total_load": 0, "net_load": 0, "prefix": [0, 1], "none": [0, 1], "label": 0, "list": [0, 1, 2], "creat": [0, 1], "plot": [0, 1], "overlai": 0, "load": [0, 1, 2], "net": [0, 1], "post": [0, 1], "visual": [0, 1, 4], "demand": [0, 1], "node": [0, 1], "can": [0, 1], "includ": [0, 1, 3], "build": [0, 1], "control": [0, 4], "minu": 0, "buffer": 0, "legend": 0, "each": [0, 1], "curv": 0, "plot_pow": [0, 4], "power": [0, 1, 3], "power_pr": 0, "predict": [0, 1], "batteri": [0, 3, 4, 5], "system": [0, 1, 3], "soc_pr": 0, "plot_soc": [0, 4], "soc": [0, 1], "state": [0, 1], "charg": [0, 1, 3], "solar_cost": [0, 4], "transformer_cost": [0, 1, 4], "cannot": [0, 1], "find": [0, 1], "good": 0, "resourc": 0, "data": [0, 1], "yet": [0, 1], "transformer_degradation_cost": [], "degrad": 1, "describ": 1, "balogun": 1, "et": 1, "al": 1, "doi": 1, "org": 1, "10": 1, "36227": 1, "techrxiv": 1, "23596725": 1, "v2": 1, "batterysim": [1, 4], "datetim": 1, "num_step": 1, "re": 1, "15": 1, "current": 1, "ag": [0, 1], "model": [1, 3], "linimncoo2": 1, "cell": 1, "need": 1, "popul": [1, 2], "more": 1, "analys": 1, "link": 1, "paper": 1, "sciencedirect": 1, "com": 1, "scienc": 1, "articl": 1, "pii": 1, "s0378775314001876": 1, "param": [0, 1], "beta_cap": 1, "capac": 1, "fade": 1, "factor": 1, "cycl": 1, "alpha_cap": 1, "calendar": 1, "beta_r": 1, "resist": 1, "growth": 1, "alpha_r": 1, "assumpt": 1, "homogen": 1, "dynam": [1, 4], "one": 1, "big": 1, "constant": 1, "temperatur": 1, "profil": 1, "vicin": 1, "lfp_cal_ag": [1, 4], "lfp_cyc_ag": [1, 4], "nmc_cal_ag": [1, 4], "nmc_cyc_ag": [1, 4], "get_aging_valu": [1, 4], "actual": 1, "lost": 1, "after": 1, "cvxpy": 1, "run": [0, 1, 3, 4], "get_calendar_ag": [1, 4], "schmalsteig": 1, "same": 1, "abov": 1, "get_cyc_ag": [1, 4], "detail": 1, "environ": 1, "per": 1, "johann": 1, "get_total_ag": [1, 4], "slightli": 1, "chang": 1, "now": 1, "make": 1, "sure": 1, "sim": [1, 4, 5], "ha": 1, "function": 1, "time": 1, "update_capac": [1, 4], "electrochem": 1, "imped": 1, "update_resist": [1, 4], "futur": 1, "work": 1, "name": 1, "contain": [0, 1, 3], "solv": 1, "problem": 1, "objective_typ": 1, "power_demand": 1, "time_r": 1, "0": 1, "solver": [1, 3], "gurobi": 1, "we": [1, 3], "It": [1, 3], "necessari": [], "attribut": 1, "fulli": [0, 1], "defin": [], "add_demand_charg": [1, 4], "simpli": [], "minim": 1, "daili": 1, "max": 1, "might": [], "NOT": [], "FOR": [], "aggregate_constraint": [1, 4], "aggreg": 1, "constraint": 1, "build_battery_cost": [1, 4], "build_electricity_cost": [1, 4], "energy_prices_t": 1, "demand_charg": 1, "fals": 1, "updat": [0, 1], "home": 1, "right": 1, "mayb": 1, "opt": 1, "build_emissions_cost": [1, 4], "build_transformer_cost": [1, 4], "get_battery_constraint": [1, 4], "get_constraint": [1, 4], "get_final_st": [], "get_market_constraint": [], "instanc": [1, 2, 8], "test": [1, 4], "sole": 1, "config": [1, 4], "path_prefix": 1, "ground": 1, "truth": 1, "condit": 1, "locat": [0, 1], "downscal": [1, 4], "input_r": 1, "output_r": 1, "onli": 1, "initi": 1, "desir": 1, "resolut": 1, "get_pow": [1, 4], "start_idx": 1, "desired_shap": 1, "96": 1, "1": 1, "month": 1, "get_solar_output": [1, 4], "modify_r": [1, 4], "new_r": 1, "update_histori": [1, 4], "main": [1, 4], "mainli": 1, "gener": 1, "new": 1, "purpos": 1, "store": 1, "configur": 1, "pge_bev2_": [1, 4], "price": 1, "schedul": 1, "tou": 1, "rate": 1, "evs": 1, "doc": 1, "found": 1, "here": 1, "add_power_profile_to_object": [1, 4], "battery_power_profil": 1, "build_cost_pge_bev2": [1, 4], "penalize_max_pow": 1, "max_power_pen": 1, "1000": 1, "heurist": 1, "take": 1, "averag": 1, "conserv": 1, "gamma": 1, "build_object": [1, 4], "mode": 1, "electricity_cost": 1, "battery_degradation_cost": 1, "load_pric": [1, 4], "time_interv": 1, "price_vector": 1, "load_base_glm": [2, 4, 7, 8], "base_file_dir": [2, 8], "base_glm_fil": [2, 8], "glm": [2, 8], "dict": [0, 1, 2], "output": [1, 2], "replace_load_w_met": [2, 4, 7, 8], "glm_dict": [2, 8], "match_str": [2, 8], "rep_str": [2, 8], "obj_typ": [2, 8], "replac": [2, 8], "properti": [1, 2, 8], "replace_load_w_meter_old": [2, 4, 7, 8], "write_base_glm": [2, 4, 7, 8], "globals_list": [2, 8], "include_list": [2, 8], "out_dir": [2, 8], "file_nam": [2, 8], "sync_list": [2, 8], "write_class_dict": [2, 4, 7, 8], "gld_dict": [2, 8], "class_nam": [2, 8], "write": [2, 8], "correspond": [2, 8], "gld": [2, 8], "write_clock_dict": [2, 4, 7, 8], "clock": [2, 8], "write_filter_dict": [2, 4, 7, 8], "filter": [2, 8], "write_mod_dict": [2, 4, 7, 8], "mod_nam": [2, 8], "write_obj_dict": [2, 4, 7, 8], "dict_kei": [2, 8], "ev50_cosimul": 3, "analysi": [3, 4], "packag": [3, 4], "charging_sim": [3, 4], "feeder_popul": [3, 4, 5, 7], "test_cas": [3, 4], "submodul": [4, 5], "cost_analysi": 4, "load_post_opt_cost": 4, "plot_result": 4, "content": 4, "batteryagingsim": 4, "batterypack": 4, "batterytest": 4, "capacitor": 4, "chargingst": 4, "electricitypric": 4, "optim": 4, "orchestr": 4, "util": 4, "glm_mod_funct": [4, 5, 7], "subpackag": 4, "base_cas": [4, 5], "event_handl": [4, 5], "gblvar": [4, 5], "glmptime": [4, 5], "master_sim": [4, 5], "voltdump2": [4, 5], "data_analysi": [4, 5], "event_handlers_oneshot": [4, 5], "parse_voltag": [4, 5], "feeder_population_old": [5, 7], "awar": 3, "python": 3, "co": 3, "platform": 3, "station": [1, 3], "integr": 3, "battery_typ": [1, 4], "json": 1, "c": 1, "determin": 1, "multipl": 1, "energi": 1, "voltag": [0, 1], "v": 1, "min": 1, "nomin": 1, "kwh": 1, "id": 1, "ambient": 1, "effici": 1, "alreadi": [], "incorpor": [], "improv": 3, "later": 1, "assum": 1, "linear": 1, "soh": [], "variat": [], "relax": [], "paramet": [0, 1], "neglig": 1, "battery_setup": [1, 4], "wh": 1, "cell_amp_hr": 1, "ah": 1, "cell_voltag": 1, "battery_setup_2": [1, 4], "scale": 1, "up": 1, "instead": 1, "battery_setup_tesla": [], "3": [0, 3], "tesla": [], "setup": [1, 4], "TO": 1, "BE": 1, "implement": [0, 1], "est_calendar_ag": [1, 4], "depend": 1, "deprec": [0, 1], "est_cyc_ag": [1, 4], "hess": 1, "its": 1, "cvx": 1, "get_ocv": [1, 4], "get_ro": [1, 4], "possibli": 1, "get_power_profil": [1, 4], "get_properti": [1, 4], "get_roundtrip_effici": [1, 4], "get_true_pow": [1, 4], "learn_param": [], "load_pack_prop": [1, 4], "save_sim_data": [1, 4], "save_prefix": 1, "save_st": [1, 4], "state_eqn": [1, 4], "append": 1, "hold": [], "discret": 1, "equat": 1, "thermal_dynam": [1, 4], "": 1, "thermal": 1, "track_soc": [1, 4], "update_soc": [1, 4], "anticip": 1, "update_max_curr": [1, 4], "verbos": 1, "update_param": [1, 4], "number": [0, 1], "update_voltag": [1, 4], "option": 1, "method": 1, "user": [1, 3], "visualize_voltag": [], "program": 1, "pack": 1, "symmetri": 1, "discharg": 1, "asymmetri": 1, "most": [1, 3], "instanti": 1, "must": 1, "least": 1, "maximum": 1, "allow": 1, "minimum": [0, 1], "deliver": 1, "type": 1, "inconsequenti": 1, "The": [0, 1, 3], "bu": 1, "distribut": [0, 1, 3], "network": [0, 1, 3], "resid": 1, "set": 1, "seri": 1, "parallel": 1, "fix": 1, "while": 1, "float": 1, "topologi": 1, "therebi": 1, "pack_max_ah": 1, "watt": 1, "hour": [0, 1], "amp": 1, "propag": 1, "forward": 1, "step": [1, 4], "amper": 1, "np": 1, "respons": 1, "rtype": [], "sum": 1, "aging_c": 1, "open": 1, "circuit": 1, "ocv": 1, "map": 1, "within": [0, 1], "ani": 1, "via": [1, 3], "interpol": 1, "certain": 1, "obtain": 1, "total": 1, "experienc": 1, "so": 1, "far": 1, "out": 1, "last": 1, "dx": 1, "relev": 1, "over": 1, "usual": 1, "call": 1, "upon": 1, "conclus": 1, "folder": 1, "str": [0, 1], "g": 1, "l": 1, "plett": 1, "manag": 1, "volum": 1, "artech": 1, "hous": 1, "2015": 1, "vol": 1, "decid": 1, "track": 1, "b": 1, "default": 1, "histori": 1, "vector": 1, "intern": 1, "surfac": 1, "self": 1, "defer": 1, "anymor": 1, "ensur": 1, "behavior": 1, "respect": 1, "inspect": 1, "end": 1, "statu": 1, "idl": 1, "auxiliari": [], "consum": [], "add": [], "well": [], "get_current_load": [1, 4], "is_ev_arriv": [1, 4], "is_charg": [1, 4], "set_current_load": [1, 4], "update_cooling_pow": [], "cool": [], "vari": [], "environment": [], "temp": [], "see": [], "how": [], "much": 1, "maintain": [], "update_load": [1, 4], "net_grid_load": 1, "ev_load": 1, "update_load_oneshot": [1, 4], "update_statu": [1, 4], "mpc": [1, 4], "an": 1, "scheme": 1, "produc": 1, "bess": 1, "compute_control": [1, 4], "action": 1, "comput": 1, "pass": 1, "control_act": 1, "signal": 1, "arbitrag": 1, "requir": 1, "satisfi": 1, "storage_constraint": 1, "initialize_forecast_data": [1, 4], "forecast": 1, "load_battery_ocv": [1, 4], "learn": 1, "reset_load": [1, 4], "done": 1, "full": 1, "dai": [0, 1], "oneshot": [1, 4], "offlin": 1, "non": 1, "feedback": 1, "structur": 1, "should": 1, "spit": 1, "whatev": 1, "being": 1, "priceload": [1, 4], "pre": 1, "undecid": 1, "hard": 1, "code": [1, 3], "path": 1, "finer": 1, "similar": 1, "what": 1, "panda": 1, "doe": 1, "typic": 1, "onc": 1, "get_pric": [1, 4], "7": 1, "do": 1, "start": 1, "cardin": 1, "set_month_data": [1, 4], "entir": 1, "chargingsim": [1, 4], "num_charging_sit": 1, "6": 1, "create_battery_object": [1, 4], "idx": 1, "node_prop": 1, "identif": 1, "none_prop": [], "l2": 1, "dcfc": 1, "assign": 1, "buffer_batteri": [], "create_charging_st": [1, 4], "power_nod": 1, "create_charging_stations_oneshot": [1, 4], "create_solar_object": [1, 4], "loc": 1, "get_act": [1, 4], "get_charger_obj_by_loc": [1, 4], "get_charging_sit": [1, 4], "get_storage_sit": [], "initialize_aging_sim": [1, 4], "initialize_control": [1, 4], "initialize_price_load": [1, 4], "memori": 1, "sampl": 1, "initialize_solar_modul": [1, 4], "load_battery_param": [1, 4], "directli": 1, "unless": 1, "otherwis": 1, "specifi": 1, "battery_config": 1, "load_config": [1, 4], "them": 1, "load_results_summari": [1, 4], "save_path_prefix": 1, "multistep": [1, 4], "power_nodes_list": 1, "stepsiz": 1, "perfect": 1, "foresight": 1, "shot": [], "update_scenario": [1, 4], "update_site_load": [], "update_step": [1, 4], "without": 1, "character": 1, "would": 1, "have": [1, 3], "occur": 1, "situ": 1, "wa": 1, "make_scenario": [1, 4], "howev": 1, "preload": 1, "global": 1, "txt": 1, "reflect": 1, "like": 1, "run_scenario_singl": [1, 4], "just": 1, "run_scenarios_parallel": [1, 4], "multi": 1, "core": 1, "processor": 1, "pc": 1, "enough": 1, "ram": 1, "lead": 1, "process": 1, "freez": 1, "run_scenarios_sequenti": [1, 4], "combin": 1, "celsiu": 1, "priori": 1, "Not": [0, 1], "avail": [1, 3], "version": [1, 3], "physic": 1, "r_pack": [1, 4], "round": 1, "trip": 1, "_eff": 1, "nominal_pack_cap": [1, 4], "py": 1, "meth": 1, "reactiv": 1, "contribut": 1, "also": [0, 1], "retain": 1, "inform": [1, 3], "inject": 1, "etc": 1, "ingest": 1, "kw": 1, "string": 1, "vehicl": 1, "lcoe": 0, "To": 0, "soon": 0, "refer": 0, "5": 0, "11": 0, "ieee": 0, "std": 0, "c57": 0, "12": [0, 1], "00": 0, "2010": 0, "normal": 0, "insul": 0, "180": 0, "000": 0, "capit": 0, "pv": [0, 1], "int": 1, "exampl": [1, 3], "jan": 1, "decemb": 1, "ndarrai": 1, "numpi": 1, "arrai": 1, "constructor": 1, "design": 1, "limit": 1, "convex": 1, "mix": 1, "integ": 1, "select": 1, "instal": [1, 3], "success": 1, "optimiza": 1, "counter": 1, "identifi": 1, "backend": 1, "invok": 1, "eco": 1, "mosek": 1, "emiss": 1, "organ": 1, "other": 1, "sequenti": 1, "manner": 1, "both": 1, "secondari": 1, "If": 1, "site": 1, "help": 1, "access": [1, 3], "proper": 1, "o": 1, "minut": 1, "buse": 1, "walk": 1, "through": 1, "some": 1, "faster": 1, "than": 1, "horizon": 1, "reset": 1, "accordingli": 1, "exist": 1, "specif": 1, "match": 1, "modifi": 1, "move": 1, "violat": 0, "tool": 3, "mostli": 3, "built": 3, "interfac": 3, "gridlab": 3, "d": 3, "phase": 3, "unbalanc": 3, "flow": 3, "impact": 3, "fast": 3, "made": 3, "web": 3, "public": 3, "shown": 3, "api": 3, "document": 3, "project": 3, "github": 3, "still": 3, "under": 3, "activ": 3, "develop": 3, "mini": 3, "tutori": 3, "simpl": 3, "case": 3, "below": 3, "guid": 3, "cite": 3}, "objects": {"": [[0, 0, 0, "-", "analysis"], [1, 0, 0, "-", "charging_sim"], [2, 0, 0, "-", "feeder_population"], [5, 0, 0, "-", "test_cases"]], "analysis": [[0, 0, 0, "-", "cost_analysis"]], "analysis.cost_analysis": [[0, 1, 1, "", "CostEstimator"]], "analysis.cost_analysis.CostEstimator": [[0, 2, 1, "", "calculate_battery_cost"], [0, 2, 1, "", "calculate_electricity_cost_PGEBEV2s"], [0, 2, 1, "", "calculate_solar_cost"], [0, 2, 1, "", "calculate_trans_loss_of_life"], [0, 2, 1, "", "plot_loads"], [0, 2, 1, "", "plot_power"], [0, 2, 1, "", "plot_soc"], [0, 2, 1, "", "solar_cost"], [0, 2, 1, "", "transformer_cost"]], "charging_sim": [[1, 0, 0, "-", "battery"], [1, 0, 0, "-", "batteryAgingSim"], [1, 0, 0, "-", "batterypack"], [1, 0, 0, "-", "capacitor"], [1, 0, 0, "-", "chargingStation"], [1, 0, 0, "-", "controller"], [1, 0, 0, "-", "electricityPrices"], [1, 0, 0, "-", "optimization"], [1, 0, 0, "-", "orchestrator"], [1, 0, 0, "-", "simulate"], [1, 0, 0, "-", "solar"], [1, 0, 0, "-", "utils"]], "charging_sim.battery": [[1, 1, 1, "", "Battery"], [1, 3, 1, "", "test"]], "charging_sim.battery.Battery": [[1, 2, 1, "", "battery_setup"], [1, 2, 1, "", "battery_setup_2"], [1, 2, 1, "", "dynamics"], [1, 2, 1, "", "est_calendar_aging"], [1, 2, 1, "", "est_cyc_aging"], [1, 2, 1, "", "get_OCV"], [1, 2, 1, "", "get_Ro"], [1, 2, 1, "", "get_aging_value"], [1, 2, 1, "", "get_power_profile"], [1, 2, 1, "", "get_properties"], [1, 2, 1, "", "get_roundtrip_efficiency"], [1, 2, 1, "", "get_total_aging"], [1, 2, 1, "", "get_true_power"], [1, 2, 1, "", "save_sim_data"], [1, 2, 1, "", "save_states"], [1, 2, 1, "", "state_eqn"], [1, 2, 1, "", "thermal_dynamics"], [1, 2, 1, "", "track_SOC"], [1, 2, 1, "", "update_SOC"], [1, 2, 1, "", "update_capacity"], [1, 2, 1, "", "update_max_current"], [1, 2, 1, "", "update_params"], [1, 2, 1, "", "update_voltage"], [1, 2, 1, "", "visualize"]], "charging_sim.batteryAgingSim": [[1, 1, 1, "", "BatterySim"]], "charging_sim.batteryAgingSim.BatterySim": [[1, 2, 1, "", "LFP_cal_aging"], [1, 2, 1, "", "LFP_cyc_aging"], [1, 2, 1, "", "NMC_cal_aging"], [1, 2, 1, "", "NMC_cyc_aging"], [1, 2, 1, "", "get_aging_value"], [1, 2, 1, "", "get_calendar_aging"], [1, 2, 1, "", "get_cyc_aging"], [1, 2, 1, "", "get_total_aging"], [1, 2, 1, "", "run"], [1, 2, 1, "", "update_capacity"], [1, 2, 1, "", "update_resistance"]], "charging_sim.batterypack": [[1, 1, 1, "", "Battery"], [1, 3, 1, "", "test"]], "charging_sim.batterypack.Battery": [[1, 4, 1, "", "R_pack"], [1, 2, 1, "", "battery_setup"], [1, 2, 1, "", "battery_setup_2"], [1, 4, 1, "", "battery_type"], [1, 4, 1, "", "config"], [1, 4, 1, "", "controller"], [1, 2, 1, "", "dynamics"], [1, 2, 1, "", "est_calendar_aging"], [1, 2, 1, "", "est_cyc_aging"], [1, 2, 1, "", "get_OCV"], [1, 2, 1, "", "get_aging_value"], [1, 2, 1, "", "get_power_profile"], [1, 2, 1, "", "get_roundtrip_efficiency"], [1, 2, 1, "", "get_total_aging"], [1, 2, 1, "", "get_true_power"], [1, 2, 1, "", "load_pack_props"], [1, 4, 1, "", "nominal_pack_cap"], [1, 2, 1, "", "save_sim_data"], [1, 2, 1, "", "state_eqn"], [1, 2, 1, "", "thermal_dynamics"], [1, 2, 1, "", "track_SOC"], [1, 2, 1, "", "update_capacity"], [1, 2, 1, "", "update_max_current"], [1, 2, 1, "", "update_voltage"], [1, 2, 1, "", "visualize"]], "charging_sim.capacitor": [[1, 1, 1, "", "Capacitor"]], "charging_sim.chargingStation": [[1, 1, 1, "", "ChargingStation"]], "charging_sim.chargingStation.ChargingStation": [[1, 2, 1, "", "get_current_load"], [1, 2, 1, "", "is_EV_arrived"], [1, 2, 1, "", "is_charging"], [1, 2, 1, "", "save_sim_data"], [1, 2, 1, "", "set_current_load"], [1, 2, 1, "", "update_load"], [1, 2, 1, "", "update_load_oneshot"], [1, 2, 1, "", "update_status"], [1, 2, 1, "", "visualize"]], "charging_sim.controller": [[1, 1, 1, "", "MPC"], [1, 1, 1, "", "Oneshot"]], "charging_sim.controller.MPC": [[1, 2, 1, "", "compute_control"], [1, 2, 1, "", "get_battery_constraints"], [1, 2, 1, "", "initialize_forecast_data"], [1, 2, 1, "", "load_battery_ocv"], [1, 2, 1, "", "reset_load"]], "charging_sim.controller.Oneshot": [[1, 2, 1, "", "compute_control"], [1, 2, 1, "", "get_battery_constraints"], [1, 2, 1, "", "load_battery_ocv"], [1, 2, 1, "", "reset_load"]], "charging_sim.electricityPrices": [[1, 1, 1, "", "PriceLoader"], [1, 3, 1, "", "main"]], "charging_sim.electricityPrices.PriceLoader": [[1, 2, 1, "", "downscale"], [1, 2, 1, "", "get_prices"], [1, 2, 1, "", "set_month_data"]], "charging_sim.optimization": [[1, 1, 1, "", "Optimization"]], "charging_sim.optimization.Optimization": [[1, 2, 1, "", "add_demand_charge"], [1, 2, 1, "", "aggregate_constraints"], [1, 2, 1, "", "build_battery_cost"], [1, 2, 1, "", "build_emissions_cost"], [1, 2, 1, "", "build_transformer_cost"], [1, 2, 1, "", "get_battery_constraint"], [1, 2, 1, "", "get_constraints"], [1, 2, 1, "", "run"]], "charging_sim.orchestrator": [[1, 1, 1, "", "ChargingSim"]], "charging_sim.orchestrator.ChargingSim": [[1, 2, 1, "", "create_battery_object"], [1, 2, 1, "", "create_charging_stations"], [1, 2, 1, "", "create_charging_stations_oneshot"], [1, 2, 1, "", "create_solar_object"], [1, 2, 1, "", "get_action"], [1, 2, 1, "", "get_charger_obj_by_loc"], [1, 2, 1, "", "get_charging_sites"], [1, 2, 1, "", "initialize_aging_sim"], [1, 2, 1, "", "initialize_controllers"], [1, 2, 1, "", "initialize_price_loader"], [1, 2, 1, "", "initialize_solar_module"], [1, 2, 1, "", "load_battery_params"], [1, 2, 1, "", "load_config"], [1, 2, 1, "", "load_results_summary"], [1, 2, 1, "", "multistep"], [1, 2, 1, "", "reset_loads"], [1, 2, 1, "", "setup"], [1, 2, 1, "", "step"], [1, 2, 1, "", "update_scenario"], [1, 2, 1, "", "update_steps"]], "charging_sim.simulate": [[1, 3, 1, "", "make_scenarios"], [1, 3, 1, "", "run"], [1, 3, 1, "", "run_scenario_single"], [1, 3, 1, "", "run_scenarios_parallel"], [1, 3, 1, "", "run_scenarios_sequential"]], "charging_sim.solar": [[1, 1, 1, "", "Solar"], [1, 3, 1, "", "main"]], "charging_sim.solar.Solar": [[1, 2, 1, "", "downscale"], [1, 2, 1, "", "get_constraints"], [1, 2, 1, "", "get_power"], [1, 2, 1, "", "get_solar_output"], [1, 2, 1, "", "modify_res"], [1, 2, 1, "", "update_history"]], "charging_sim.utils": [[1, 3, 1, "", "PGE_BEV2_S"], [1, 3, 1, "", "add_power_profile_to_object"], [1, 3, 1, "", "build_cost_PGE_BEV2S"], [1, 3, 1, "", "build_electricity_cost"], [1, 3, 1, "", "build_objective"], [1, 3, 1, "", "load_prices"]], "feeder_population": [[2, 0, 0, "-", "glm_mod_functions"]], "feeder_population.glm_mod_functions": [[2, 3, 1, "", "load_base_glm"], [2, 3, 1, "", "replace_load_w_meter"], [2, 3, 1, "", "replace_load_w_meter_old"], [2, 3, 1, "", "write_base_glm"], [2, 3, 1, "", "write_class_dict"], [2, 3, 1, "", "write_clock_dict"], [2, 3, 1, "", "write_filter_dict"], [2, 3, 1, "", "write_mod_dict"], [2, 3, 1, "", "write_obj_dict"]], "test_cases": [[6, 0, 0, "-", "base_case"], [7, 0, 0, "-", "battery"]], "test_cases.battery": [[8, 0, 0, "-", "feeder_population"]], "test_cases.battery.feeder_population": [[8, 0, 0, "-", "glm_mod_functions"]], "test_cases.battery.feeder_population.glm_mod_functions": [[8, 3, 1, "", "load_base_glm"], [8, 3, 1, "", "replace_load_w_meter"], [8, 3, 1, "", "replace_load_w_meter_old"], [8, 3, 1, "", "write_base_glm"], [8, 3, 1, "", "write_class_dict"], [8, 3, 1, "", "write_clock_dict"], [8, 3, 1, "", "write_filter_dict"], [8, 3, 1, "", "write_mod_dict"], [8, 3, 1, "", "write_obj_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 3, "ev": 3, "ecosim": 3, "": [], "document": [], "indic": 3, "tabl": 3, "analysi": 0, "packag": [0, 1, 2, 5, 6, 7, 8], "submodul": [0, 1, 2, 6, 7, 8], "cost_analysi": 0, "modul": [0, 1, 2, 5, 6, 7, 8], "load_post_opt_cost": 0, "plot_result": 0, "content": [0, 1, 2, 3, 5, 6, 7, 8], "charging_sim": 1, "batteri": [1, 7, 8], "batteryagingsim": 1, "batterypack": 1, "batterytest": 1, "capacitor": 1, "chargingst": 1, "control": 1, "electricitypric": 1, "optim": 1, "orchestr": 1, "simul": 1, "solar": 1, "util": 1, "feeder_popul": [2, 8], "glm_mod_funct": [2, 8], "ev50_cosimul": 4, "test_cas": [5, 6, 7, 8], "subpackag": [5, 7], "base_cas": 6, "event_handl": [6, 7], "gblvar": [6, 7], "glmptime": [6, 7], "master_sim": [6, 7], "sim": [6, 7], "voltdump2": [6, 7], "data_analysi": 7, "event_handlers_oneshot": 7, "parse_voltag": 7, "scenario": 7, "feeder_population_old": 8, "1": 3, "0": 3}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"EV50_cosimulation": [[4, "ev50-cosimulation"]], "test_cases package": [[5, "test-cases-package"]], "Subpackages": [[5, "subpackages"], [7, "subpackages"]], "Module contents": [[5, "module-test_cases"], [0, "module-analysis"], [1, "module-charging_sim"], [2, "module-feeder_population"], [6, "module-test_cases.base_case"], [7, "module-test_cases.battery"], [8, "module-test_cases.battery.feeder_population"]], "analysis package": [[0, "analysis-package"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"]], "analysis.cost_analysis module": [[0, "module-analysis.cost_analysis"]], "analysis.load_post_opt_costs module": [[0, "analysis-load-post-opt-costs-module"]], "analysis.plot_results module": [[0, "analysis-plot-results-module"]], "charging_sim package": [[1, "charging-sim-package"]], "charging_sim.battery module": [[1, "module-charging_sim.battery"]], "charging_sim.batteryAgingSim module": [[1, "module-charging_sim.batteryAgingSim"]], "charging_sim.batterypack module": [[1, "module-charging_sim.batterypack"]], "charging_sim.batterytest module": [[1, "charging-sim-batterytest-module"]], "charging_sim.capacitor module": [[1, "module-charging_sim.capacitor"]], "charging_sim.chargingStation module": [[1, "module-charging_sim.chargingStation"]], "charging_sim.controller module": [[1, "module-charging_sim.controller"]], "charging_sim.electricityPrices module": [[1, "module-charging_sim.electricityPrices"]], "charging_sim.optimization module": [[1, "module-charging_sim.optimization"]], "charging_sim.orchestrator module": [[1, "module-charging_sim.orchestrator"]], "charging_sim.simulate module": [[1, "module-charging_sim.simulate"]], "charging_sim.solar module": [[1, "module-charging_sim.solar"]], "charging_sim.utils module": [[1, "module-charging_sim.utils"]], "feeder_population package": [[2, "feeder-population-package"]], "feeder_population.feeder_population module": [[2, "feeder-population-feeder-population-module"]], "feeder_population.glm_mod_functions module": [[2, "module-feeder_population.glm_mod_functions"]], "Welcome to EV-Ecosim 1.0.0": [[3, "welcome-to-ev-ecosim-1-0-0"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "test_cases.base_case package": [[6, "test-cases-base-case-package"]], "test_cases.base_case.event_handlers module": [[6, "test-cases-base-case-event-handlers-module"]], "test_cases.base_case.gblvar module": [[6, "test-cases-base-case-gblvar-module"]], "test_cases.base_case.glmptime module": [[6, "test-cases-base-case-glmptime-module"]], "test_cases.base_case.master_sim module": [[6, "test-cases-base-case-master-sim-module"]], "test_cases.base_case.sim module": [[6, "test-cases-base-case-sim-module"]], "test_cases.base_case.voltdump2 module": [[6, "test-cases-base-case-voltdump2-module"]], "test_cases.battery package": [[7, "test-cases-battery-package"]], "test_cases.battery.data_analysis module": [[7, "test-cases-battery-data-analysis-module"]], "test_cases.battery.event_handlers module": [[7, "test-cases-battery-event-handlers-module"]], "test_cases.battery.event_handlers_oneshot module": [[7, "test-cases-battery-event-handlers-oneshot-module"]], "test_cases.battery.gblvar module": [[7, "test-cases-battery-gblvar-module"]], "test_cases.battery.glmptime module": [[7, "test-cases-battery-glmptime-module"]], "test_cases.battery.master_sim module": [[7, "test-cases-battery-master-sim-module"]], "test_cases.battery.parse_voltages module": [[7, "test-cases-battery-parse-voltages-module"]], "test_cases.battery.scenarios module": [[7, "test-cases-battery-scenarios-module"]], "test_cases.battery.sim module": [[7, "test-cases-battery-sim-module"]], "test_cases.battery.voltdump2 module": [[7, "test-cases-battery-voltdump2-module"]], "test_cases.battery.feeder_population package": [[8, "test-cases-battery-feeder-population-package"]], "test_cases.battery.feeder_population.feeder_population module": [[8, "test-cases-battery-feeder-population-feeder-population-module"]], "test_cases.battery.feeder_population.feeder_population_old module": [[8, "test-cases-battery-feeder-population-feeder-population-old-module"]], "test_cases.battery.feeder_population.glm_mod_functions module": [[8, "module-test_cases.battery.feeder_population.glm_mod_functions"]]}, "indexentries": {"costestimator (class in analysis.cost_analysis)": [[0, "analysis.cost_analysis.CostEstimator"]], "analysis": [[0, "module-analysis"]], "analysis.cost_analysis": [[0, "module-analysis.cost_analysis"]], "calculate_battery_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_battery_cost"]], "calculate_electricity_cost_pgebev2s() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_electricity_cost_PGEBEV2s"]], "calculate_solar_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_solar_cost"]], "calculate_trans_loss_of_life() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_trans_loss_of_life"]], "module": [[0, "module-analysis"], [0, "module-analysis.cost_analysis"], [1, "module-charging_sim"], [1, "module-charging_sim.battery"], [1, "module-charging_sim.batteryAgingSim"], [1, "module-charging_sim.batterypack"], [1, "module-charging_sim.capacitor"], [1, "module-charging_sim.chargingStation"], [1, "module-charging_sim.controller"], [1, "module-charging_sim.electricityPrices"], [1, "module-charging_sim.optimization"], [1, "module-charging_sim.orchestrator"], [1, "module-charging_sim.simulate"], [1, "module-charging_sim.solar"], [1, "module-charging_sim.utils"], [2, "module-feeder_population"], [2, "module-feeder_population.glm_mod_functions"], [5, "module-test_cases"], [6, "module-test_cases.base_case"], [7, "module-test_cases.battery"], [8, "module-test_cases.battery.feeder_population"], [8, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "plot_loads() (analysis.cost_analysis.costestimator static method)": [[0, "analysis.cost_analysis.CostEstimator.plot_loads"]], "plot_power() (analysis.cost_analysis.costestimator static method)": [[0, "analysis.cost_analysis.CostEstimator.plot_power"]], "plot_soc() (analysis.cost_analysis.costestimator static method)": [[0, "analysis.cost_analysis.CostEstimator.plot_soc"]], "solar_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.solar_cost"]], "transformer_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.transformer_cost"]], "battery (class in charging_sim.battery)": [[1, "charging_sim.battery.Battery"]], "battery (class in charging_sim.batterypack)": [[1, "charging_sim.batterypack.Battery"]], "batterysim (class in charging_sim.batteryagingsim)": [[1, "charging_sim.batteryAgingSim.BatterySim"]], "capacitor (class in charging_sim.capacitor)": [[1, "charging_sim.capacitor.Capacitor"]], "chargingsim (class in charging_sim.orchestrator)": [[1, "charging_sim.orchestrator.ChargingSim"]], "chargingstation (class in charging_sim.chargingstation)": [[1, "charging_sim.chargingStation.ChargingStation"]], "lfp_cal_aging() (charging_sim.batteryagingsim.batterysim static method)": [[1, "charging_sim.batteryAgingSim.BatterySim.LFP_cal_aging"]], "lfp_cyc_aging() (charging_sim.batteryagingsim.batterysim static method)": [[1, "charging_sim.batteryAgingSim.BatterySim.LFP_cyc_aging"]], "mpc (class in charging_sim.controller)": [[1, "charging_sim.controller.MPC"]], "nmc_cal_aging() (charging_sim.batteryagingsim.batterysim static method)": [[1, "charging_sim.batteryAgingSim.BatterySim.NMC_cal_aging"]], "nmc_cyc_aging() (charging_sim.batteryagingsim.batterysim static method)": [[1, "charging_sim.batteryAgingSim.BatterySim.NMC_cyc_aging"]], "oneshot (class in charging_sim.controller)": [[1, "charging_sim.controller.Oneshot"]], "optimization (class in charging_sim.optimization)": [[1, "charging_sim.optimization.Optimization"]], "pge_bev2_s() (in module charging_sim.utils)": [[1, "charging_sim.utils.PGE_BEV2_S"]], "priceloader (class in charging_sim.electricityprices)": [[1, "charging_sim.electricityPrices.PriceLoader"]], "r_pack (charging_sim.batterypack.battery attribute)": [[1, "charging_sim.batterypack.Battery.R_pack"]], "solar (class in charging_sim.solar)": [[1, "charging_sim.solar.Solar"]], "add_demand_charge() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.add_demand_charge"]], "add_power_profile_to_object() (in module charging_sim.utils)": [[1, "charging_sim.utils.add_power_profile_to_object"]], "aggregate_constraints() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.aggregate_constraints"]], "battery_setup() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.battery_setup"]], "battery_setup() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.battery_setup"]], "battery_setup_2() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.battery_setup_2"]], "battery_setup_2() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.battery_setup_2"]], "battery_type (charging_sim.batterypack.battery attribute)": [[1, "charging_sim.batterypack.Battery.battery_type"]], "build_battery_cost() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.build_battery_cost"]], "build_cost_pge_bev2s() (in module charging_sim.utils)": [[1, "charging_sim.utils.build_cost_PGE_BEV2S"]], "build_electricity_cost() (in module charging_sim.utils)": [[1, "charging_sim.utils.build_electricity_cost"]], "build_emissions_cost() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.build_emissions_cost"]], "build_objective() (in module charging_sim.utils)": [[1, "charging_sim.utils.build_objective"]], "build_transformer_cost() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.build_transformer_cost"]], "charging_sim": [[1, "module-charging_sim"]], "charging_sim.battery": [[1, "module-charging_sim.battery"]], "charging_sim.batteryagingsim": [[1, "module-charging_sim.batteryAgingSim"]], "charging_sim.batterypack": [[1, "module-charging_sim.batterypack"]], "charging_sim.capacitor": [[1, "module-charging_sim.capacitor"]], "charging_sim.chargingstation": [[1, "module-charging_sim.chargingStation"]], "charging_sim.controller": [[1, "module-charging_sim.controller"]], "charging_sim.electricityprices": [[1, "module-charging_sim.electricityPrices"]], "charging_sim.optimization": [[1, "module-charging_sim.optimization"]], "charging_sim.orchestrator": [[1, "module-charging_sim.orchestrator"]], "charging_sim.simulate": [[1, "module-charging_sim.simulate"]], "charging_sim.solar": [[1, "module-charging_sim.solar"]], "charging_sim.utils": [[1, "module-charging_sim.utils"]], "compute_control() (charging_sim.controller.mpc method)": [[1, "charging_sim.controller.MPC.compute_control"]], "compute_control() (charging_sim.controller.oneshot method)": [[1, "charging_sim.controller.Oneshot.compute_control"]], "config (charging_sim.batterypack.battery attribute)": [[1, "charging_sim.batterypack.Battery.config"]], "controller (charging_sim.batterypack.battery attribute)": [[1, "charging_sim.batterypack.Battery.controller"]], "create_battery_object() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.create_battery_object"]], "create_charging_stations() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.create_charging_stations"]], "create_charging_stations_oneshot() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.create_charging_stations_oneshot"]], "create_solar_object() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.create_solar_object"]], "downscale() (charging_sim.electricityprices.priceloader method)": [[1, "charging_sim.electricityPrices.PriceLoader.downscale"]], "downscale() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.downscale"]], "dynamics() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.dynamics"]], "dynamics() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.dynamics"]], "est_calendar_aging() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.est_calendar_aging"]], "est_calendar_aging() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.est_calendar_aging"]], "est_cyc_aging() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.est_cyc_aging"]], "est_cyc_aging() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.est_cyc_aging"]], "get_ocv() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.get_OCV"]], "get_ocv() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.get_OCV"]], "get_ro() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.get_Ro"]], "get_action() (charging_sim.orchestrator.chargingsim static method)": [[1, "charging_sim.orchestrator.ChargingSim.get_action"]], "get_aging_value() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.get_aging_value"]], "get_aging_value() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.get_aging_value"]], "get_aging_value() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.get_aging_value"]], "get_battery_constraint() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.get_battery_constraint"]], "get_battery_constraints() (charging_sim.controller.mpc method)": [[1, "charging_sim.controller.MPC.get_battery_constraints"]], "get_battery_constraints() (charging_sim.controller.oneshot method)": [[1, "charging_sim.controller.Oneshot.get_battery_constraints"]], "get_calendar_aging() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.get_calendar_aging"]], "get_charger_obj_by_loc() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.get_charger_obj_by_loc"]], "get_charging_sites() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.get_charging_sites"]], "get_constraints() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.get_constraints"]], "get_constraints() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.get_constraints"]], "get_current_load() (charging_sim.chargingstation.chargingstation method)": [[1, "charging_sim.chargingStation.ChargingStation.get_current_load"]], "get_cyc_aging() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.get_cyc_aging"]], "get_power() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.get_power"]], "get_power_profile() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.get_power_profile"]], "get_power_profile() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.get_power_profile"]], "get_prices() (charging_sim.electricityprices.priceloader method)": [[1, "charging_sim.electricityPrices.PriceLoader.get_prices"]], "get_properties() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.get_properties"]], "get_roundtrip_efficiency() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.get_roundtrip_efficiency"]], "get_roundtrip_efficiency() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.get_roundtrip_efficiency"]], "get_solar_output() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.get_solar_output"]], "get_total_aging() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.get_total_aging"]], "get_total_aging() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.get_total_aging"]], "get_total_aging() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.get_total_aging"]], "get_true_power() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.get_true_power"]], "get_true_power() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.get_true_power"]], "initialize_aging_sim() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.initialize_aging_sim"]], "initialize_controllers() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.initialize_controllers"]], "initialize_forecast_data() (charging_sim.controller.mpc method)": [[1, "charging_sim.controller.MPC.initialize_forecast_data"]], "initialize_price_loader() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.initialize_price_loader"]], "initialize_solar_module() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.initialize_solar_module"]], "is_ev_arrived() (charging_sim.chargingstation.chargingstation method)": [[1, "charging_sim.chargingStation.ChargingStation.is_EV_arrived"]], "is_charging() (charging_sim.chargingstation.chargingstation method)": [[1, "charging_sim.chargingStation.ChargingStation.is_charging"]], "load_battery_ocv() (charging_sim.controller.mpc method)": [[1, "charging_sim.controller.MPC.load_battery_ocv"]], "load_battery_ocv() (charging_sim.controller.oneshot method)": [[1, "charging_sim.controller.Oneshot.load_battery_ocv"]], "load_battery_params() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.load_battery_params"]], "load_config() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.load_config"]], "load_pack_props() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.load_pack_props"]], "load_prices() (in module charging_sim.utils)": [[1, "charging_sim.utils.load_prices"]], "load_results_summary() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.load_results_summary"]], "main() (in module charging_sim.electricityprices)": [[1, "charging_sim.electricityPrices.main"]], "main() (in module charging_sim.solar)": [[1, "charging_sim.solar.main"]], "make_scenarios() (in module charging_sim.simulate)": [[1, "charging_sim.simulate.make_scenarios"]], "modify_res() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.modify_res"]], "multistep() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.multistep"]], "nominal_pack_cap (charging_sim.batterypack.battery attribute)": [[1, "charging_sim.batterypack.Battery.nominal_pack_cap"]], "reset_load() (charging_sim.controller.mpc method)": [[1, "charging_sim.controller.MPC.reset_load"]], "reset_load() (charging_sim.controller.oneshot method)": [[1, "charging_sim.controller.Oneshot.reset_load"]], "reset_loads() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.reset_loads"]], "run() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.run"]], "run() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.run"]], "run() (in module charging_sim.simulate)": [[1, "charging_sim.simulate.run"]], "run_scenario_single() (in module charging_sim.simulate)": [[1, "charging_sim.simulate.run_scenario_single"]], "run_scenarios_parallel() (in module charging_sim.simulate)": [[1, "charging_sim.simulate.run_scenarios_parallel"]], "run_scenarios_sequential() (in module charging_sim.simulate)": [[1, "charging_sim.simulate.run_scenarios_sequential"]], "save_sim_data() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.save_sim_data"]], "save_sim_data() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.save_sim_data"]], "save_sim_data() (charging_sim.chargingstation.chargingstation method)": [[1, "charging_sim.chargingStation.ChargingStation.save_sim_data"]], "save_states() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.save_states"]], "set_current_load() (charging_sim.chargingstation.chargingstation method)": [[1, "charging_sim.chargingStation.ChargingStation.set_current_load"]], "set_month_data() (charging_sim.electricityprices.priceloader method)": [[1, "charging_sim.electricityPrices.PriceLoader.set_month_data"]], "setup() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.setup"]], "state_eqn() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.state_eqn"]], "state_eqn() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.state_eqn"]], "step() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.step"]], "test() (in module charging_sim.battery)": [[1, "charging_sim.battery.test"]], "test() (in module charging_sim.batterypack)": [[1, "charging_sim.batterypack.test"]], "thermal_dynamics() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.thermal_dynamics"]], "thermal_dynamics() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.thermal_dynamics"]], "track_soc() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.track_SOC"]], "track_soc() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.track_SOC"]], "update_soc() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.update_SOC"]], "update_capacity() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.update_capacity"]], "update_capacity() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.update_capacity"]], "update_capacity() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.update_capacity"]], "update_history() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.update_history"]], "update_load() (charging_sim.chargingstation.chargingstation method)": [[1, "charging_sim.chargingStation.ChargingStation.update_load"]], "update_load_oneshot() (charging_sim.chargingstation.chargingstation method)": [[1, "charging_sim.chargingStation.ChargingStation.update_load_oneshot"]], "update_max_current() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.update_max_current"]], "update_max_current() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.update_max_current"]], "update_params() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.update_params"]], "update_resistance() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.update_resistance"]], "update_scenario() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.update_scenario"]], "update_status() (charging_sim.chargingstation.chargingstation method)": [[1, "charging_sim.chargingStation.ChargingStation.update_status"]], "update_steps() (charging_sim.orchestrator.chargingsim method)": [[1, "charging_sim.orchestrator.ChargingSim.update_steps"]], "update_voltage() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.update_voltage"]], "update_voltage() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.update_voltage"]], "visualize() (charging_sim.battery.battery method)": [[1, "charging_sim.battery.Battery.visualize"]], "visualize() (charging_sim.batterypack.battery method)": [[1, "charging_sim.batterypack.Battery.visualize"]], "visualize() (charging_sim.chargingstation.chargingstation method)": [[1, "charging_sim.chargingStation.ChargingStation.visualize"]], "feeder_population": [[2, "module-feeder_population"]], "feeder_population.glm_mod_functions": [[2, "module-feeder_population.glm_mod_functions"]], "load_base_glm() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "write_base_glm() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_obj_dict"]], "test_cases": [[5, "module-test_cases"]], "test_cases.base_case": [[6, "module-test_cases.base_case"]], "test_cases.battery": [[7, "module-test_cases.battery"]], "load_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "test_cases.battery.feeder_population": [[8, "module-test_cases.battery.feeder_population"]], "test_cases.battery.feeder_population.glm_mod_functions": [[8, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "write_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_obj_dict"]]}})