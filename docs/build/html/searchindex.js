Search.setIndex({"docnames": ["analysis", "charging_sim", "feeder_population", "index", "modules", "test_cases", "test_cases.base_case", "test_cases.battery", "test_cases.battery.feeder_population"], "filenames": ["analysis.rst", "charging_sim.rst", "feeder_population.rst", "index.rst", "modules.rst", "test_cases.rst", "test_cases.base_case.rst", "test_cases.battery.rst", "test_cases.battery.feeder_population.rst"], "titles": ["analysis package", "charging_sim package", "feeder_population package", "Welcome to EV-Ecosim\u2019s documentation!", "EV50_cosimulation", "test_cases package", "test_cases.base_case package", "test_cases.battery package", "test_cases.battery.feeder_population package"], "terms": {"index": [1, 3], "modul": [3, 4], "search": 3, "page": 3, "thi": [0, 1, 2], "file": [0, 1, 2, 8], "host": [0, 1], "costestim": [0, 4], "class": [0, 1, 2, 8], "which": [0, 1], "estim": [0, 1], "cost": 0, "differ": 0, "grid": 0, "der": 0, "compon": 0, "from": [0, 1], "simul": [0, 4], "num_dai": 0, "sourc": [0, 1, 2, 8], "base": [0, 1], "object": [0, 1, 2, 4, 8], "i": [0, 1], "us": [0, 1], "calcul": 0, "level": 0, "asset": 0, "ev": 0, "ecosim": 0, "calculate_lco": [0, 4], "electr": 0, "storag": 0, "calculate_battery_cost": [0, 4], "result_dir": 0, "input": [0, 1], "directori": 0, "save": 0, "result": 0, "dictionari": [0, 2, 8], "return": [0, 1, 2], "result_dict": 0, "calculate_electricity_cost_pgebev2": [0, 4], "pge_separate_fil": 0, "true": [0, 1], "overal": 0, "pgebev2": 0, "given": 0, "scenario": [0, 4, 5], "boolean": 0, "note": 0, "pge": [0, 1], "block": 0, "separ": 0, "A": [0, 1], "compris": 0, "all": [0, 1, 2, 8], "dollar": 0, "amount": 0, "calculate_solar_cost": [0, 4], "ref": 0, "http": [0, 1], "www": [0, 1], "nrel": 0, "gov": 0, "solar": [0, 4], "market": 0, "research": 0, "html": 0, "valu": [0, 1], "ar": 0, "pull": 0, "calculate_trans_loss_of_lif": [0, 4], "expect": 0, "transform": [0, 1], "loss": 0, "life": 0, "static": [0, 1], "plot_load": [0, 4], "total_load": 0, "net_load": 0, "prefix": 0, "none": [0, 1], "label": 0, "list": [0, 1, 2], "creat": 0, "plot": 0, "overlai": 0, "load": [0, 1, 2], "net": 0, "post": 0, "visual": 0, "demand": [0, 1], "node": 0, "can": [0, 1], "includ": 0, "build": [0, 1], "control": [0, 4], "minu": 0, "buffer": 0, "legend": 0, "each": [0, 1], "curv": 0, "plot_pow": [0, 4], "power": 0, "power_pr": 0, "predict": 0, "batteri": [0, 4, 5], "system": 0, "soc_pr": 0, "plot_soc": [0, 4], "soc": 0, "state": 0, "charg": [0, 1], "solar_cost": [0, 4], "transformer_cost": [0, 1, 4], "cannot": 0, "find": 0, "good": 0, "resourc": 0, "data": [0, 1], "yet": 0, "transformer_degradation_cost": [0, 4], "degrad": 1, "describ": 1, "balogun": 1, "et": 1, "al": 1, "doi": 1, "org": 1, "10": 1, "36227": 1, "techrxiv": 1, "23596725": 1, "v2": 1, "batterysim": [1, 4], "datetim": 1, "num_step": 1, "re": 1, "15": 1, "current": 1, "ag": 1, "model": 1, "linimncoo2": 1, "cell": 1, "need": 1, "popul": [1, 2], "more": 1, "analys": 1, "link": 1, "paper": 1, "sciencedirect": 1, "com": 1, "scienc": 1, "articl": 1, "pii": 1, "s0378775314001876": 1, "param": 1, "beta_cap": 1, "capac": 1, "fade": 1, "factor": 1, "cycl": 1, "alpha_cap": 1, "calendar": 1, "beta_r": 1, "resist": 1, "growth": 1, "alpha_r": 1, "assumpt": 1, "homogen": 1, "dynam": 1, "one": 1, "big": 1, "constant": 1, "temperatur": 1, "profil": 1, "vicin": 1, "lfp_cal_ag": [1, 4], "lfp_cyc_ag": [1, 4], "nmc_cal_ag": [1, 4], "nmc_cyc_ag": [1, 4], "get_aging_valu": [1, 4], "actual": 1, "lost": 1, "after": 1, "cvxpy": 1, "run": [1, 4], "get_calendar_ag": [1, 4], "schmalsteig": 1, "same": 1, "abov": 1, "get_cyc_ag": [1, 4], "detail": 1, "environ": 1, "per": 1, "johann": 1, "get_total_ag": [1, 4], "slightli": 1, "chang": 1, "now": 1, "make": 1, "sure": 1, "sim": [1, 4, 5], "ha": 1, "function": 1, "time": 1, "update_capac": [1, 4], "electrochem": 1, "imped": 1, "update_resist": [1, 4], "futur": 1, "work": 1, "name": 1, "contain": 1, "solv": 1, "problem": 1, "objective_typ": 1, "power_demand": 1, "time_r": 1, "0": 1, "solver": 1, "gurobi": 1, "we": 1, "It": 1, "necessari": 1, "attribut": 1, "fulli": 1, "defin": 1, "add_demand_charg": [1, 4], "simpli": 1, "minim": 1, "daili": 1, "max": 1, "might": 1, "NOT": 1, "FOR": 1, "aggregate_constraint": [1, 4], "aggreg": 1, "constraint": 1, "build_battery_cost": [1, 4], "build_electricity_cost": [1, 4], "energy_prices_t": 1, "demand_charg": 1, "fals": 1, "updat": 1, "home": 1, "right": 1, "mayb": 1, "opt": 1, "build_emissions_cost": [1, 4], "build_transformer_cost": [1, 4], "get_battery_constraint": [1, 4], "get_constraint": [1, 4], "get_final_st": [1, 4], "get_market_constraint": [1, 4], "instanc": [1, 2, 8], "test": [1, 4], "sole": 1, "config": 1, "path_prefix": 1, "ground": 1, "truth": 1, "condit": 1, "locat": 1, "downscal": [1, 4], "input_r": 1, "output_r": 1, "onli": 1, "initi": 1, "desir": 1, "resolut": 1, "get_pow": [1, 4], "start_idx": 1, "desired_shap": 1, "96": 1, "1": 1, "month": 1, "get_solar_output": [1, 4], "modify_r": [1, 4], "new_r": 1, "update_histori": [1, 4], "main": [1, 4], "mainli": 1, "gener": 1, "new": 1, "purpos": 1, "store": 1, "configur": 1, "pge_bev2_": [1, 4], "price": 1, "schedul": 1, "tou": 1, "rate": 1, "evs": 1, "doc": 1, "found": 1, "here": 1, "add_power_profile_to_object": [1, 4], "battery_power_profil": 1, "build_cost_pge_bev2": [1, 4], "penalize_max_pow": 1, "max_power_pen": 1, "1000": 1, "heurist": 1, "take": 1, "averag": 1, "conserv": 1, "gamma": 1, "build_object": [1, 4], "mode": 1, "electricity_cost": 1, "battery_degradation_cost": 1, "load_pric": [1, 4], "time_interv": 1, "price_vector": 1, "load_base_glm": [2, 4, 7, 8], "base_file_dir": [2, 8], "base_glm_fil": [2, 8], "glm": [2, 8], "dict": 2, "output": 2, "replace_load_w_met": [2, 4, 7, 8], "glm_dict": [2, 8], "match_str": [2, 8], "rep_str": [2, 8], "obj_typ": [2, 8], "replac": [2, 8], "properti": [2, 8], "replace_load_w_meter_old": [2, 4, 7, 8], "write_base_glm": [2, 4, 7, 8], "globals_list": [2, 8], "include_list": [2, 8], "out_dir": [2, 8], "file_nam": [2, 8], "sync_list": [2, 8], "write_class_dict": [2, 4, 7, 8], "gld_dict": [2, 8], "class_nam": [2, 8], "write": [2, 8], "correspond": [2, 8], "gld": [2, 8], "write_clock_dict": [2, 4, 7, 8], "clock": [2, 8], "write_filter_dict": [2, 4, 7, 8], "filter": [2, 8], "write_mod_dict": [2, 4, 7, 8], "mod_nam": [2, 8], "write_obj_dict": [2, 4, 7, 8], "dict_kei": [2, 8], "ev50_cosimul": 3, "analysi": [3, 4], "packag": [3, 4], "charging_sim": [3, 4], "feeder_popul": [3, 4, 5, 7], "test_cas": [3, 4], "submodul": [4, 5], "cost_analysi": 4, "load_post_opt_cost": 4, "plot_result": 4, "content": 4, "batteryagingsim": 4, "batterypack": 4, "batterytest": 4, "capacitor": 4, "chargingst": 4, "electricitypric": 4, "optim": 4, "orchestr": 4, "util": 4, "glm_mod_funct": [4, 5, 7], "subpackag": 4, "base_cas": [4, 5], "event_handl": [4, 5], "gblvar": [4, 5], "glmptime": [4, 5], "master_sim": [4, 5], "voltdump2": [4, 5], "data_analysi": [4, 5], "event_handlers_oneshot": [4, 5], "parse_voltag": [4, 5], "feeder_population_old": [5, 7]}, "objects": {"": [[0, 0, 0, "-", "analysis"], [1, 0, 0, "-", "charging_sim"], [2, 0, 0, "-", "feeder_population"], [5, 0, 0, "-", "test_cases"]], "analysis": [[0, 0, 0, "-", "cost_analysis"]], "analysis.cost_analysis": [[0, 1, 1, "", "CostEstimator"]], "analysis.cost_analysis.CostEstimator": [[0, 2, 1, "", "calculate_LCOE"], [0, 2, 1, "", "calculate_battery_cost"], [0, 2, 1, "", "calculate_electricity_cost_PGEBEV2s"], [0, 2, 1, "", "calculate_solar_cost"], [0, 2, 1, "", "calculate_trans_loss_of_life"], [0, 2, 1, "", "plot_loads"], [0, 2, 1, "", "plot_power"], [0, 2, 1, "", "plot_soc"], [0, 2, 1, "", "solar_cost"], [0, 2, 1, "", "transformer_cost"], [0, 2, 1, "", "transformer_degradation_cost"]], "charging_sim": [[1, 0, 0, "-", "batteryAgingSim"], [1, 0, 0, "-", "capacitor"], [1, 0, 0, "-", "optimization"], [1, 0, 0, "-", "solar"], [1, 0, 0, "-", "utils"]], "charging_sim.batteryAgingSim": [[1, 1, 1, "", "BatterySim"]], "charging_sim.batteryAgingSim.BatterySim": [[1, 2, 1, "", "LFP_cal_aging"], [1, 2, 1, "", "LFP_cyc_aging"], [1, 2, 1, "", "NMC_cal_aging"], [1, 2, 1, "", "NMC_cyc_aging"], [1, 2, 1, "", "get_aging_value"], [1, 2, 1, "", "get_calendar_aging"], [1, 2, 1, "", "get_cyc_aging"], [1, 2, 1, "", "get_total_aging"], [1, 2, 1, "", "run"], [1, 2, 1, "", "update_capacity"], [1, 2, 1, "", "update_resistance"]], "charging_sim.capacitor": [[1, 1, 1, "", "Capacitor"]], "charging_sim.optimization": [[1, 1, 1, "", "Optimization"], [1, 3, 1, "", "test"]], "charging_sim.optimization.Optimization": [[1, 2, 1, "", "add_demand_charge"], [1, 2, 1, "", "aggregate_constraints"], [1, 2, 1, "", "build_battery_cost"], [1, 2, 1, "", "build_electricity_cost"], [1, 2, 1, "", "build_emissions_cost"], [1, 2, 1, "", "build_transformer_cost"], [1, 2, 1, "", "get_battery_constraint"], [1, 2, 1, "", "get_constraints"], [1, 2, 1, "", "get_final_states"], [1, 2, 1, "", "get_market_constraints"], [1, 2, 1, "", "objective"], [1, 2, 1, "", "run"]], "charging_sim.solar": [[1, 1, 1, "", "Solar"], [1, 3, 1, "", "main"]], "charging_sim.solar.Solar": [[1, 2, 1, "", "downscale"], [1, 2, 1, "", "get_constraints"], [1, 2, 1, "", "get_power"], [1, 2, 1, "", "get_solar_output"], [1, 2, 1, "", "modify_res"], [1, 2, 1, "", "update_history"]], "charging_sim.utils": [[1, 3, 1, "", "PGE_BEV2_S"], [1, 3, 1, "", "add_power_profile_to_object"], [1, 3, 1, "", "build_cost_PGE_BEV2S"], [1, 3, 1, "", "build_electricity_cost"], [1, 3, 1, "", "build_objective"], [1, 3, 1, "", "load_prices"]], "feeder_population": [[2, 0, 0, "-", "glm_mod_functions"]], "feeder_population.glm_mod_functions": [[2, 3, 1, "", "load_base_glm"], [2, 3, 1, "", "replace_load_w_meter"], [2, 3, 1, "", "replace_load_w_meter_old"], [2, 3, 1, "", "write_base_glm"], [2, 3, 1, "", "write_class_dict"], [2, 3, 1, "", "write_clock_dict"], [2, 3, 1, "", "write_filter_dict"], [2, 3, 1, "", "write_mod_dict"], [2, 3, 1, "", "write_obj_dict"]], "test_cases": [[6, 0, 0, "-", "base_case"], [7, 0, 0, "-", "battery"]], "test_cases.battery": [[8, 0, 0, "-", "feeder_population"]], "test_cases.battery.feeder_population": [[8, 0, 0, "-", "glm_mod_functions"]], "test_cases.battery.feeder_population.glm_mod_functions": [[8, 3, 1, "", "load_base_glm"], [8, 3, 1, "", "replace_load_w_meter"], [8, 3, 1, "", "replace_load_w_meter_old"], [8, 3, 1, "", "write_base_glm"], [8, 3, 1, "", "write_class_dict"], [8, 3, 1, "", "write_clock_dict"], [8, 3, 1, "", "write_filter_dict"], [8, 3, 1, "", "write_mod_dict"], [8, 3, 1, "", "write_obj_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"welcom": 3, "ev": 3, "ecosim": 3, "": 3, "document": 3, "indic": 3, "tabl": 3, "analysi": 0, "packag": [0, 1, 2, 5, 6, 7, 8], "submodul": [0, 1, 2, 6, 7, 8], "cost_analysi": 0, "modul": [0, 1, 2, 5, 6, 7, 8], "load_post_opt_cost": 0, "plot_result": 0, "content": [0, 1, 2, 3, 5, 6, 7, 8], "charging_sim": 1, "batteri": [1, 7, 8], "batteryagingsim": 1, "batterypack": 1, "batterytest": 1, "capacitor": 1, "chargingst": 1, "control": 1, "electricitypric": 1, "optim": 1, "orchestr": 1, "simul": 1, "solar": 1, "util": 1, "feeder_popul": [2, 8], "glm_mod_funct": [2, 8], "ev50_cosimul": 4, "test_cas": [5, 6, 7, 8], "subpackag": [5, 7], "base_cas": 6, "event_handl": [6, 7], "gblvar": [6, 7], "glmptime": [6, 7], "master_sim": [6, 7], "sim": [6, 7], "voltdump2": [6, 7], "data_analysi": 7, "event_handlers_oneshot": 7, "parse_voltag": 7, "scenario": 7, "feeder_population_old": 8}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"analysis package": [[0, "analysis-package"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"]], "analysis.cost_analysis module": [[0, "module-analysis.cost_analysis"]], "analysis.load_post_opt_costs module": [[0, "analysis-load-post-opt-costs-module"]], "analysis.plot_results module": [[0, "analysis-plot-results-module"]], "Module contents": [[0, "module-analysis"], [1, "module-charging_sim"], [2, "module-feeder_population"], [5, "module-test_cases"], [6, "module-test_cases.base_case"], [7, "module-test_cases.battery"], [8, "module-test_cases.battery.feeder_population"]], "charging_sim package": [[1, "charging-sim-package"]], "charging_sim.battery module": [[1, "charging-sim-battery-module"]], "charging_sim.batteryAgingSim module": [[1, "module-charging_sim.batteryAgingSim"]], "charging_sim.batterypack module": [[1, "charging-sim-batterypack-module"]], "charging_sim.batterytest module": [[1, "charging-sim-batterytest-module"]], "charging_sim.capacitor module": [[1, "module-charging_sim.capacitor"]], "charging_sim.chargingStation module": [[1, "charging-sim-chargingstation-module"]], "charging_sim.controller module": [[1, "charging-sim-controller-module"]], "charging_sim.electricityPrices module": [[1, "charging-sim-electricityprices-module"]], "charging_sim.optimization module": [[1, "module-charging_sim.optimization"]], "charging_sim.orchestrator module": [[1, "charging-sim-orchestrator-module"]], "charging_sim.simulate module": [[1, "charging-sim-simulate-module"]], "charging_sim.solar module": [[1, "module-charging_sim.solar"]], "charging_sim.utils module": [[1, "module-charging_sim.utils"]], "feeder_population package": [[2, "feeder-population-package"]], "feeder_population.feeder_population module": [[2, "feeder-population-feeder-population-module"]], "feeder_population.glm_mod_functions module": [[2, "module-feeder_population.glm_mod_functions"]], "Welcome to EV-Ecosim\u2019s documentation!": [[3, "welcome-to-ev-ecosim-s-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "EV50_cosimulation": [[4, "ev50-cosimulation"]], "test_cases package": [[5, "test-cases-package"]], "Subpackages": [[5, "subpackages"], [7, "subpackages"]], "test_cases.base_case package": [[6, "test-cases-base-case-package"]], "test_cases.base_case.event_handlers module": [[6, "test-cases-base-case-event-handlers-module"]], "test_cases.base_case.gblvar module": [[6, "test-cases-base-case-gblvar-module"]], "test_cases.base_case.glmptime module": [[6, "test-cases-base-case-glmptime-module"]], "test_cases.base_case.master_sim module": [[6, "test-cases-base-case-master-sim-module"]], "test_cases.base_case.sim module": [[6, "test-cases-base-case-sim-module"]], "test_cases.base_case.voltdump2 module": [[6, "test-cases-base-case-voltdump2-module"]], "test_cases.battery package": [[7, "test-cases-battery-package"]], "test_cases.battery.data_analysis module": [[7, "test-cases-battery-data-analysis-module"]], "test_cases.battery.event_handlers module": [[7, "test-cases-battery-event-handlers-module"]], "test_cases.battery.event_handlers_oneshot module": [[7, "test-cases-battery-event-handlers-oneshot-module"]], "test_cases.battery.gblvar module": [[7, "test-cases-battery-gblvar-module"]], "test_cases.battery.glmptime module": [[7, "test-cases-battery-glmptime-module"]], "test_cases.battery.master_sim module": [[7, "test-cases-battery-master-sim-module"]], "test_cases.battery.parse_voltages module": [[7, "test-cases-battery-parse-voltages-module"]], "test_cases.battery.scenarios module": [[7, "test-cases-battery-scenarios-module"]], "test_cases.battery.sim module": [[7, "test-cases-battery-sim-module"]], "test_cases.battery.voltdump2 module": [[7, "test-cases-battery-voltdump2-module"]], "test_cases.battery.feeder_population package": [[8, "test-cases-battery-feeder-population-package"]], "test_cases.battery.feeder_population.feeder_population module": [[8, "test-cases-battery-feeder-population-feeder-population-module"]], "test_cases.battery.feeder_population.feeder_population_old module": [[8, "test-cases-battery-feeder-population-feeder-population-old-module"]], "test_cases.battery.feeder_population.glm_mod_functions module": [[8, "module-test_cases.battery.feeder_population.glm_mod_functions"]]}, "indexentries": {"costestimator (class in analysis.cost_analysis)": [[0, "analysis.cost_analysis.CostEstimator"]], "analysis": [[0, "module-analysis"]], "analysis.cost_analysis": [[0, "module-analysis.cost_analysis"]], "calculate_lcoe() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_LCOE"]], "calculate_battery_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_battery_cost"]], "calculate_electricity_cost_pgebev2s() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_electricity_cost_PGEBEV2s"]], "calculate_solar_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_solar_cost"]], "calculate_trans_loss_of_life() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.calculate_trans_loss_of_life"]], "module": [[0, "module-analysis"], [0, "module-analysis.cost_analysis"], [1, "module-charging_sim"], [1, "module-charging_sim.batteryAgingSim"], [1, "module-charging_sim.capacitor"], [1, "module-charging_sim.optimization"], [1, "module-charging_sim.solar"], [1, "module-charging_sim.utils"], [2, "module-feeder_population"], [2, "module-feeder_population.glm_mod_functions"], [5, "module-test_cases"], [6, "module-test_cases.base_case"], [7, "module-test_cases.battery"], [8, "module-test_cases.battery.feeder_population"], [8, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "plot_loads() (analysis.cost_analysis.costestimator static method)": [[0, "analysis.cost_analysis.CostEstimator.plot_loads"]], "plot_power() (analysis.cost_analysis.costestimator static method)": [[0, "analysis.cost_analysis.CostEstimator.plot_power"]], "plot_soc() (analysis.cost_analysis.costestimator static method)": [[0, "analysis.cost_analysis.CostEstimator.plot_soc"]], "solar_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.solar_cost"]], "transformer_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.transformer_cost"]], "transformer_degradation_cost() (analysis.cost_analysis.costestimator method)": [[0, "analysis.cost_analysis.CostEstimator.transformer_degradation_cost"]], "batterysim (class in charging_sim.batteryagingsim)": [[1, "charging_sim.batteryAgingSim.BatterySim"]], "capacitor (class in charging_sim.capacitor)": [[1, "charging_sim.capacitor.Capacitor"]], "lfp_cal_aging() (charging_sim.batteryagingsim.batterysim static method)": [[1, "charging_sim.batteryAgingSim.BatterySim.LFP_cal_aging"]], "lfp_cyc_aging() (charging_sim.batteryagingsim.batterysim static method)": [[1, "charging_sim.batteryAgingSim.BatterySim.LFP_cyc_aging"]], "nmc_cal_aging() (charging_sim.batteryagingsim.batterysim static method)": [[1, "charging_sim.batteryAgingSim.BatterySim.NMC_cal_aging"]], "nmc_cyc_aging() (charging_sim.batteryagingsim.batterysim static method)": [[1, "charging_sim.batteryAgingSim.BatterySim.NMC_cyc_aging"]], "optimization (class in charging_sim.optimization)": [[1, "charging_sim.optimization.Optimization"]], "pge_bev2_s() (in module charging_sim.utils)": [[1, "charging_sim.utils.PGE_BEV2_S"]], "solar (class in charging_sim.solar)": [[1, "charging_sim.solar.Solar"]], "add_demand_charge() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.add_demand_charge"]], "add_power_profile_to_object() (in module charging_sim.utils)": [[1, "charging_sim.utils.add_power_profile_to_object"]], "aggregate_constraints() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.aggregate_constraints"]], "build_battery_cost() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.build_battery_cost"]], "build_cost_pge_bev2s() (in module charging_sim.utils)": [[1, "charging_sim.utils.build_cost_PGE_BEV2S"]], "build_electricity_cost() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.build_electricity_cost"]], "build_electricity_cost() (in module charging_sim.utils)": [[1, "charging_sim.utils.build_electricity_cost"]], "build_emissions_cost() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.build_emissions_cost"]], "build_objective() (in module charging_sim.utils)": [[1, "charging_sim.utils.build_objective"]], "build_transformer_cost() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.build_transformer_cost"]], "charging_sim": [[1, "module-charging_sim"]], "charging_sim.batteryagingsim": [[1, "module-charging_sim.batteryAgingSim"]], "charging_sim.capacitor": [[1, "module-charging_sim.capacitor"]], "charging_sim.optimization": [[1, "module-charging_sim.optimization"]], "charging_sim.solar": [[1, "module-charging_sim.solar"]], "charging_sim.utils": [[1, "module-charging_sim.utils"]], "downscale() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.downscale"]], "get_aging_value() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.get_aging_value"]], "get_battery_constraint() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.get_battery_constraint"]], "get_calendar_aging() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.get_calendar_aging"]], "get_constraints() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.get_constraints"]], "get_constraints() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.get_constraints"]], "get_cyc_aging() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.get_cyc_aging"]], "get_final_states() (charging_sim.optimization.optimization static method)": [[1, "charging_sim.optimization.Optimization.get_final_states"]], "get_market_constraints() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.get_market_constraints"]], "get_power() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.get_power"]], "get_solar_output() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.get_solar_output"]], "get_total_aging() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.get_total_aging"]], "load_prices() (in module charging_sim.utils)": [[1, "charging_sim.utils.load_prices"]], "main() (in module charging_sim.solar)": [[1, "charging_sim.solar.main"]], "modify_res() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.modify_res"]], "objective() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.objective"]], "run() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.run"]], "run() (charging_sim.optimization.optimization method)": [[1, "charging_sim.optimization.Optimization.run"]], "test() (in module charging_sim.optimization)": [[1, "charging_sim.optimization.test"]], "update_capacity() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.update_capacity"]], "update_history() (charging_sim.solar.solar method)": [[1, "charging_sim.solar.Solar.update_history"]], "update_resistance() (charging_sim.batteryagingsim.batterysim method)": [[1, "charging_sim.batteryAgingSim.BatterySim.update_resistance"]], "feeder_population": [[2, "module-feeder_population"]], "feeder_population.glm_mod_functions": [[2, "module-feeder_population.glm_mod_functions"]], "load_base_glm() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "write_base_glm() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module feeder_population.glm_mod_functions)": [[2, "feeder_population.glm_mod_functions.write_obj_dict"]], "test_cases": [[5, "module-test_cases"]], "test_cases.base_case": [[6, "module-test_cases.base_case"]], "test_cases.battery": [[7, "module-test_cases.battery"]], "load_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.load_base_glm"]], "replace_load_w_meter() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter"]], "replace_load_w_meter_old() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.replace_load_w_meter_old"]], "test_cases.battery.feeder_population": [[8, "module-test_cases.battery.feeder_population"]], "test_cases.battery.feeder_population.glm_mod_functions": [[8, "module-test_cases.battery.feeder_population.glm_mod_functions"]], "write_base_glm() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_base_glm"]], "write_class_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_class_dict"]], "write_clock_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_clock_dict"]], "write_filter_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_filter_dict"]], "write_mod_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_mod_dict"]], "write_obj_dict() (in module test_cases.battery.feeder_population.glm_mod_functions)": [[8, "test_cases.battery.feeder_population.glm_mod_functions.write_obj_dict"]]}})